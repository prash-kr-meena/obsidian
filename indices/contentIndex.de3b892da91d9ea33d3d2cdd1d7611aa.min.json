{"/":{"title":"🪴 Quartz 3.3","content":"\nHost your second brain and [digital garden](https://jzhao.xyz/posts/networked-thought) for free. Quartz features\n\n1. Extremely fast natural-language [[notes/search]]\n2. Customizable and hackable design based on [Hugo](https://gohugo.io/)\n3. Automatically generated backlinks, link previews, and local graph\n4. Built-in [[notes/CJK + Latex Support (测试) | CJK + Latex Support]] and [[notes/callouts | Admonition-style callouts]]\n5. Support for both Markdown Links and Wikilinks\n\nCheck out some of the [amazing gardens that community members](notes/showcase.md) have published with Quartz or read about [why I made Quartz](notes/philosophy.md) to begin with.\n\n## Get Started\n\u003e 📚 Step 1: [Setup your own digital garden using Quartz](notes/setup.md)\n\nReturning user? Figure out how to [[notes/updating|update]] your existing Quartz garden.\n\nIf you prefer browsing the contents of this site through a list instead of a graph, you see a list of all [setup-related notes](/tags/setup).\n\n### Troubleshooting\n- 🚧 [Troubleshooting and FAQ](notes/troubleshooting.md)\n- 🐛 [Submit an Issue](https://github.com/jackyzha0/quartz/issues)\n- 👀 [Discord Community](https://discord.gg/cRFFHYye7t)\n\n","lastmodified":"2023-05-07T14:06:19.062298846Z","tags":[]},"/CJK-+-Latex-Support-%E6%B5%8B%E8%AF%95":{"title":"CJK + Latex Support (测试)","content":"\n## Chinese, Japanese, Korean Support\n几乎在我们意识到之前，我们已经离开了地面。\n\n우리가 그것을 알기도 전에 우리는 땅을 떠났습니다.\n\n私たちがそれを知るほぼ前に、私たちは地面を離れていました。\n\n## Latex\n\nBlock math works with two dollar signs `$$...$$`\n\n$$f(x) = \\int_{-\\infty}^\\infty\n    f\\hat(\\xi),e^{2 \\pi i \\xi x}\n    \\,d\\xi$$\n\t\nInline math also works with single dollar signs `$...$`. For example, Euler's identity but inline: $e^{i\\pi} = -1$\n\nAligned equations work quite well:\n\n$$\n\\begin{aligned}\na \u0026= b + c \\\\ \u0026= e + f \\\\\n\\end{aligned}\n$$\n\nAnd matrices\n\n$$\n\\begin{bmatrix}\n1 \u0026 2 \u0026 3 \\\\\na \u0026 b \u0026 c\n\\end{bmatrix}\n$$\n\n## RTL\nMore information on configuring RTL languages like Arabic in the [config](notes/config.md) page.\n","lastmodified":"2023-05-07T14:06:19.030298606Z","tags":[]},"/Learning-Obsidian":{"title":"Learning Obsidian","content":"Content around setting up obsidian and learning to obsidian for improving my memory retention of concepts I read and learn\n\nObsidian Tutorial\n\t[Obsidian As A Second Brain: The ULTIMATE Tutorial](https://www.youtube.com/watch?v=WqKluXIra70\u0026ab_channel=Dabi)\n\n\nObsidian as Task Manager?\n\t[The Ultimate Task Management Workflow In Obsidian](https://www.youtube.com/watch?v=oSGO3caCdGY\u0026ab_channel=PrakashJoshiPax)\n\n\nKeyboard shotcuts for obsedian?\n\n\nImportant plugins for obsedian?\n\n\nSyncing on multiple devices (especially phone)\n\t[How to sync Obsidian 4 FREE · Syncthing vs Autosync\t](https://www.youtube.com/watch?v=t3cy132eeUU\u0026ab_channel=DJLensing)\n\nPublishing your notes\n\t[How to Set Up a Digital Garden With Obsidian For Free](https://www.youtube.com/watch?v=kg-9n_A4Tf0\u0026ab_channel=PrakashJoshiPax)\n\t[Publish your Obsidian Vault Online for Free with Quartz](https://www.youtube.com/watch?v=ITiiuBNVue0\u0026ab_channel=BrandonBoswell)\n\n\nBackup with Git\n\t[Backup your Obsidian Vault for free](https://www.youtube.com/watch?v=BTN6hJ65qk8\u0026ab_channel=BrandonBoswell)\n\t[How to back up your notes with Obsidian Git](https://www.youtube.com/watch?v=XR7PYaMVDw0\u0026ab_channel=DannyHatcher)\n\n\n","lastmodified":"2023-05-07T14:06:19.034298636Z","tags":[]},"/Obsidian/CJK-+-Latex-Support-%E6%B5%8B%E8%AF%95":{"title":"CJK + Latex Support (测试)","content":"\n## Chinese, Japanese, Korean Support\n几乎在我们意识到之前，我们已经离开了地面。\n\n우리가 그것을 알기도 전에 우리는 땅을 떠났습니다.\n\n私たちがそれを知るほぼ前に、私たちは地面を離れていました。\n\n## Latex\n\nBlock math works with two dollar signs `$$...$$`\n\n$$f(x) = \\int_{-\\infty}^\\infty\n    f\\hat(\\xi),e^{2 \\pi i \\xi x}\n    \\,d\\xi$$\n\t\nInline math also works with single dollar signs `$...$`. For example, Euler's identity but inline: $e^{i\\pi} = -1$\n\nAligned equations work quite well:\n\n$$\n\\begin{aligned}\na \u0026= b + c \\\\ \u0026= e + f \\\\\n\\end{aligned}\n$$\n\nAnd matrices\n\n$$\n\\begin{bmatrix}\n1 \u0026 2 \u0026 3 \\\\\na \u0026 b \u0026 c\n\\end{bmatrix}\n$$\n\n## RTL\nMore information on configuring RTL languages like Arabic in the [config](notes/config.md) page.\n","lastmodified":"2023-05-07T14:06:19.034298636Z","tags":[]},"/Obsidian/Learning-Obsidian":{"title":"Learning Obsidian","content":"Content around setting up obsidian and learning to obsidian for improving my memory retention of concepts I read and learn\n\nObsidian Tutorial\n\t[Obsidian As A Second Brain: The ULTIMATE Tutorial](https://www.youtube.com/watch?v=WqKluXIra70\u0026ab_channel=Dabi)\n\n\nObsidian as Task Manager?\n\t[The Ultimate Task Management Workflow In Obsidian](https://www.youtube.com/watch?v=oSGO3caCdGY\u0026ab_channel=PrakashJoshiPax)\n\n\nKeyboard shotcuts for obsedian?\n\n\nImportant plugins for obsedian?\n\n\nSyncing on multiple devices (especially phone)\n\t[How to sync Obsidian 4 FREE · Syncthing vs Autosync\t](https://www.youtube.com/watch?v=t3cy132eeUU\u0026ab_channel=DJLensing)\n\nPublishing your notes\n\t[How to Set Up a Digital Garden With Obsidian For Free](https://www.youtube.com/watch?v=kg-9n_A4Tf0\u0026ab_channel=PrakashJoshiPax)\n\t[Publish your Obsidian Vault Online for Free with Quartz](https://www.youtube.com/watch?v=ITiiuBNVue0\u0026ab_channel=BrandonBoswell)\n\n\nBackup with Git\n\t[Backup your Obsidian Vault for free](https://www.youtube.com/watch?v=BTN6hJ65qk8\u0026ab_channel=BrandonBoswell)\n\t[How to back up your notes with Obsidian Git](https://www.youtube.com/watch?v=XR7PYaMVDw0\u0026ab_channel=DannyHatcher)\n\n\n","lastmodified":"2023-05-07T14:06:19.034298636Z","tags":[]},"/Obsidian/callouts":{"title":"Callouts","content":"\n## Callout support\n\nQuartz supports the same Admonition-callout syntax as Obsidian.\n\nThis includes\n- 12 Distinct callout types (each with several aliases)\n- Collapsable callouts\n\nSee [documentation on supported types and syntax here](https://help.obsidian.md/Editing+and+formatting/Callouts).\n\n## Showcase\n\n\u003e [!EXAMPLE] Examples\n\u003e\n\u003e Aliases: example\n\n\u003e [!note] Notes\n\u003e\n\u003e Aliases: note\n\n\u003e [!abstract] Summaries \n\u003e\n\u003e Aliases: abstract, summary, tldr\n\n\u003e [!info] Info \n\u003e\n\u003e Aliases: info, todo\n\n\u003e [!tip] Hint \n\u003e\n\u003e Aliases: tip, hint, important\n\n\u003e [!success] Success \n\u003e\n\u003e Aliases: success, check, done\n\n\u003e [!question] Question \n\u003e\n\u003e Aliases: question, help, faq\n\n\u003e [!warning] Warning \n\u003e\n\u003e Aliases: warning, caution, attention\n\n\u003e [!failure] Failure \n\u003e\n\u003e Aliases: failure, fail, missing\n\n\u003e [!danger] Error\n\u003e\n\u003e Aliases: danger, error\n\n\u003e [!bug] Bug\n\u003e\n\u003e Aliases: bug\n\n\u003e [!quote] Quote\n\u003e\n\u003e Aliases: quote, cite\n","lastmodified":"2023-05-07T14:06:19.034298636Z","tags":[]},"/Obsidian/config":{"title":"Configuration","content":"\n## Configuration\nQuartz is designed to be extremely configurable. You can find the bulk of the configuration scattered throughout the repository depending on how in-depth you'd like to get.\n\nThe majority of configuration can be found under `data/config.yaml`. An annotated example configuration is shown below.\n\n```yaml {title=\"data/config.yaml\"}\n# The name to display in the footer\nname: Jacky Zhao\n\n# whether to globally show the table of contents on each page\n# this can be turned off on a per-page basis by adding this to the\n# front-matter of that note\nenableToc: true\n\n# whether to by-default open or close the table of contents on each page\nopenToc: false\n\n# whether to display on-hover link preview cards\nenableLinkPreview: true\n\n# whether to render titles for code blocks\nenableCodeBlockTitle: true \n\n# whether to render copy buttons for code blocks\nenableCodeBlockCopy: true \n\n# whether to render callouts\nenableCallouts: true\n\n# whether to try to process Latex\nenableLatex: true\n\n# whether to enable single-page-app style rendering\n# this prevents flashes of unstyled content and improves\n# smoothness of Quartz. More info in issue #109 on GitHub\nenableSPA: true\n\n# whether to render a footer\nenableFooter: true\n\n# whether backlinks of pages should show the context in which\n# they were mentioned\nenableContextualBacklinks: true\n\n# whether to show a section of recent notes on the home page\nenableRecentNotes: false\n\n# whether to display an 'edit' button next to the last edited field\n# that links to github\nenableGitHubEdit: true\nGitHubLink: https://github.com/jackyzha0/quartz/tree/hugo/content\n\n# whether to render mermaid diagrams\nenableMermaid: true\n\n# whether to use Operand to power semantic search\n# IMPORTANT: replace this API key with your own if you plan on using\n# Operand search!\nsearch:\n  enableSemanticSearch: false\n  operandApiKey: \"REPLACE-WITH-YOUR-OPERAND-API-KEY\"\n  operandIndexId: \"REPLACE-WITH-YOUR-OPERAND-INDEX-ID\"\n\n# page description used for SEO\ndescription:\n  Host your second brain and digital garden for free. Quartz features extremely fast full-text search,\n  Wikilink support, backlinks, local graph, tags, and link previews.\n\n# title of the home page (also for SEO)\npage_title:\n  \"🪴 Quartz 3.3\"\n\n# links to show in the footer\nlinks:\n  - link_name: Twitter\n    link: https://twitter.com/_jzhao\n  - link_name: Github\n    link: https://github.com/jackyzha0\n```\n\n### Code Block Titles\nTo add code block titles with Quartz:\n\n1. Ensure that code block titles are enabled in Quartz's configuration:\n\n    ```yaml {title=\"data/config.yaml\", linenos=false}\n    enableCodeBlockTitle: true\n    ```\n\n2. Add the `title` attribute to the desired [code block\n   fence](https://gohugo.io/content-management/syntax-highlighting/#highlighting-in-code-fences):\n\n      ```markdown {linenos=false}\n       ```yaml {title=\"data/config.yaml\"}\n       enableCodeBlockTitle: true  # example from step 1\n       ```\n      ```\n\n**Note** that if `{title=\u003cmy-title\u003e}` is included, and code block titles are not\nenabled, no errors will occur, and the title attribute will be ignored.\n\n### HTML Favicons\nIf you would like to customize the favicons of your Quartz-based website, you \ncan add them to the `data/config.yaml` file. The **default** without any set \n`favicon` key is:\n\n```html {title=\"layouts/partials/head.html\", linenostart=15}\n\u003clink rel=\"shortcut icon\" href=\"icon.png\" type=\"image/png\"\u003e\n```\n\nThe default can be overridden by defining a value to the `favicon` key in your \n`data/config.yaml` file. For example, here is a `List[Dictionary]` example format, which is\nequivalent to the default:\n\n```yaml {title=\"data/config.yaml\", linenos=false}\nfavicon:\n  - { rel: \"shortcut icon\", href: \"icon.png\", type: \"image/png\" }\n#  - { ... } # Repeat for each additional favicon you want to add\n```\n\nIn this format, the keys are identical to their HTML representations.\n\nIf you plan to add multiple favicons generated by a website (see list below), it\nmay be easier to define it as HTML. Here is an example which appends the \n**Apple touch icon** to Quartz's default favicon:\n\n```yaml {title=\"data/config.yaml\", linenos=false}\nfavicon: |\n  \u003clink rel=\"shortcut icon\" href=\"icon.png\" type=\"image/png\"\u003e\n  \u003clink rel=\"apple-touch-icon\" sizes=\"180x180\" href=\"/apple-touch-icon.png\"\u003e\n```\n\nThis second favicon will now be used as a web page icon when someone adds your \nwebpage to the home screen of their Apple device. If you are interested in more \ninformation about the current and past standards of favicons, you can read \n[this article](https://www.emergeinteractive.com/insights/detail/the-essentials-of-favicons/).\n\n**Note** that all generated favicon paths, defined by the `href` \nattribute, are relative to the `static/` directory.\n\n### Graph View\nTo customize the Interactive Graph view, you can poke around `data/graphConfig.yaml`.\n\n```yaml {title=\"data/graphConfig.yaml\"}\n# if true, a Global Graph will be shown on home page with full width, no backlink.\n# A different set of Local Graphs will be shown on sub pages.\n# if false, Local Graph will be default on every page as usual\nenableGlobalGraph: false\n\n### Local Graph ###\nlocalGraph:\n    # whether automatically generate a legend\n    enableLegend: false\n    \n    # whether to allow dragging nodes in the graph\n    enableDrag: true\n    \n    # whether to allow zooming and panning the graph\n    enableZoom: true\n    \n    # how many neighbours of the current node to show (-1 is all nodes)\n    depth: 1\n    \n    # initial zoom factor of the graph\n    scale: 1.2\n    \n    # how strongly nodes should repel each other\n    repelForce: 2\n\n    # how strongly should nodes be attracted to the center of gravity\n    centerForce: 1\n\n    # what the default link length should be\n    linkDistance: 1\n    \n    # how big the node labels should be\n    fontSize: 0.6\n    \n    # scale at which to start fading the labes on nodes\n    opacityScale: 3\n\n### Global Graph ###\nglobalGraph:\n\t# same settings as above\n\n### For all graphs ###\n# colour specific nodes path off of their path\npaths:\n  - /moc: \"#4388cc\"\n```\n\n\n## Styling\nWant to go even more in-depth? You can add custom CSS styling and change existing colours through editing `assets/styles/custom.scss`. If you'd like to target specific parts of the site, you can add ids and classes to the HTML partials in `/layouts/partials`. \n\n### Partials\nPartials are what dictate what gets rendered to the page. Want to change how pages are styled and structured? You can edit the appropriate layout in `/layouts`.\n\nFor example, the structure of the home page can be edited through `/layouts/index.html`. To customize the footer, you can edit `/layouts/partials/footer.html`\n\nMore info about partials on [Hugo's website.](https://gohugo.io/templates/partials/)\n\nStill having problems? Checkout our [FAQ and Troubleshooting guide](notes/troubleshooting.md).\n\n## Language Support\n[CJK + Latex Support (测试)](notes/CJK%20+%20Latex%20Support%20(测试).md) comes out of the box with Quartz.\n\nWant to support languages that read from right-to-left (like Arabic)? Hugo (and by proxy, Quartz) supports this natively.\n\nFollow the steps [Hugo provides here](https://gohugo.io/content-management/multilingual/#configure-languages) and modify your `config.toml`\n\nFor example:\n\n```toml\ndefaultContentLanguage = 'ar'\n[languages]\n  [languages.ar]\n    languagedirection = 'rtl'\n    title = 'مدونتي'\n    weight = 1\n```\n","lastmodified":"2023-05-07T14:06:19.034298636Z","tags":["setup"]},"/Obsidian/custom-Domain":{"title":"Custom Domain","content":"\n### Registrar\nThis step is only applicable if you are using a **custom domain**! If you are using a `\u003cYOUR-USERNAME\u003e.github.io` domain, you can skip this step.\n\nFor this last bit to take effect, you also need to create a CNAME record with the DNS provider you register your domain with (i.e. NameCheap, Google Domains).\n\nGitHub has some [documentation on this](https://docs.github.com/en/pages/configuring-a-custom-domain-for-your-github-pages-site/managing-a-custom-domain-for-your-github-pages-site), but the tldr; is to\n\n1. Go to your forked repository (`github.com/\u003cYOUR-GITHUB-USERNAME\u003e/quartz`) settings page and go to the Pages tab. Under \"Custom domain\", type your custom domain, then click **Save**.\n2. Go to your DNS Provider and create a CNAME record that points from your domain to `\u003cYOUR-GITHUB-USERNAME.github.io.` (yes, with the trailing period).\n\n\t![Example Configuration for Quartz](/notes/images/google-domains.png)*Example Configuration for Quartz*\n3. Wait 30 minutes to an hour for the network changes to kick in.\n4. Done!","lastmodified":"2023-05-07T14:06:19.034298636Z","tags":[]},"/Obsidian/docker":{"title":"Hosting with Docker","content":"\nIf you want to host Quartz on a machine without using a webpage hosting service, it may be easier to [install Docker Compose](https://docs.docker.com/compose/install/) and follow the instructions below than to [install Quartz's dependencies manually](notes/preview%20changes.md).\n## Hosting Quartz Locally\nYou can serve Quartz locally at `http://localhost:1313` with the following script, replacing `/path/to/quartz` with the \nactual path to your Quartz folder.\n\ndocker-compose.yml\n```\nservices:\n  quartz-hugo:\n    image: ghcr.io/jackyzha0/quartz:hugo\n    container_name: quartz-hugo\n    volumes:\n      - /path/to/quartz:/quartz\n    ports:\n      - 1313:1313\n\n    # optional\n    environment:\n      - HUGO_BIND=0.0.0.0\n      - HUGO_BASEURL=http://localhost\n      - HUGO_PORT=1313\n      - HUGO_APPENDPORT=true\n      - HUGO_LIVERELOADPORT=-1\n```\n\nThen run with: `docker-compose up -d` in the same directory as your `docker-compose.yml` file.\n\nWhile the container is running, you can update the `quartz` fork with: `docker exec -it quartz-hugo make update`.\n\n## Exposing Your Container to the Internet\n\n### To Your Public IP Address with Port Forwarding (insecure)\n\nAssuming you are already familiar with [port forwarding](https://en.wikipedia.org/wiki/Port_forwarding) and [setting it up with your router model](https://portforward.com):\n\n1. You should set the environment variable `HUGO_BASEURL=http://your-public-ip` and then start your container.\n2. Set up port forwarding on your router from port `p` to `your-local-ip:1313`.\n3. You should now be able to access Quartz from outside your local network at `http://your-public-ip:p`.\n\nHowever, your HTTP connection will be unencrypted and **this method is not secure**.\n\n### To a Domain using Cloudflare Proxy\n\n1. Port forward 443 (HTTPS) from your machine.\n2. Buy a custom domain (say, `your-domain.com`) from [Cloudflare](https://www.cloudflare.com/products/registrar/). Point a DNS A record from `your-domain.com` to your public IP address and enable the proxy.\n3. Set the environment variables `HUGO_BASEURL=https://your-domain.com`, `HUGO_PORT=443`, and `HUGO_APPENDPORT=false`. Change `1313:1313` to `443:443` for the `ports` in `docker-compose.yml`.\n4. Spin up your Quartz container and enjoy it at `https://your-domain.com`!\n\n### To a Domain using a Reverse Proxy\n\nIf you want to serve more than just Quartz to the internet on this machine (or don't want to use the Cloudflare registrar and proxy), you should follow the steps in the section above (as appropriate) and also set up a reverse proxy, like [Traefik](https://doc.traefik.io/traefik). Be sure to configure your TLS certificates too!\n","lastmodified":"2023-05-07T14:06:19.034298636Z","tags":["setup"]},"/Obsidian/editing":{"title":"Editing Content in Quartz","content":"\n## Editing \nQuartz runs on top of [Hugo](https://gohugo.io/) so all notes are written in [Markdown](https://www.markdownguide.org/getting-started/).\n\n### Folder Structure\nHere's a rough overview of what's what.\n\n**All content in your garden can found in the `/content` folder.** To make edits, you can open any of the files and make changes directly and save it. You can organize content into any folder you'd like.\n\n**To edit the main home page, open `/content/_index.md`.**\n\n### Front Matter\nHugo is picky when it comes to metadata for files. Make sure that your title is double-quoted and that you have a title defined at the top of your file like so, otherwise the generated page will not have a title!\n\nYou can also add tags here as well.\n\n```yaml\n---\ntitle: \"Example Title\"\ntags:\n- example-tag\n---\n\nRest of your content here...\n```\n\n### Obsidian\nI recommend using [Obsidian](http://obsidian.md/) as a way to edit and grow your digital garden. It comes with a really nice editor and graphical interface to preview all of your local files.\n\nThis step is **highly recommended**.\n\n\u003e 🔗 Step 3: [How to setup your Obsidian Vault to work with Quartz](notes/obsidian.md)\n\n## Previewing Changes\nThis step is purely optional and mostly for those who want to see the published version of their digital garden locally before opening it up to the internet. This is *highly recommended* but not required.\n\n\u003e 👀 Step 4: [Preview Quartz Changes](notes/preview%20changes.md)\n\nFor those who like to live life more on the edge, viewing the garden through Obsidian gets you pretty close to the real thing.\n\n## Publishing Changes\nNow that you know the basics of managing your digital garden using Quartz, you can publish it to the internet!\n\n\u003e 🌍 Step 5: [Hosting Quartz online!](notes/hosting.md)\n\nHaving problems? Checkout our [FAQ and Troubleshooting guide](notes/troubleshooting.md).\n","lastmodified":"2023-05-07T14:06:19.034298636Z","tags":["setup"]},"/Obsidian/hosting":{"title":"Deploying Quartz to the Web","content":"\n## Hosting on GitHub Pages\nQuartz is designed to be effortless to deploy. If you forked and cloned Quartz directly from the repository, everything should already be good to go! Follow the steps below.\n\n### Enable GitHub Actions Permissions\nBy default, GitHub disables workflows from modifying your files (for good reason!). However, Quartz needs this to write the actual site files back to GitHub.\n\nHead to `Settings \u003e Action \u003e General \u003e Workflow Permissions` and choose `Read and Write Permissions`\n\n![[notes/images/github-actions.png]]\n*Enable GitHub Actions*\n\n### Enable GitHub Pages\n\nHead to the 'Settings' tab of your forked repository and go to the 'Pages' tab.\n\n1. (IMPORTANT) Set the source to deploy from `master` (and not `hugo`) using `/ (root)`\n2. Set a custom domain here if you have one!\n\n![Enable GitHub Pages](/notes/images/github-pages.png)*Enable GitHub Pages*\n\n### Pushing Changes\nTo see your changes on the internet, we need to push it them to GitHub. Quartz is a `git` repository so updating it is the same workflow as you would follow as if it were just a regular software project.\n\n```shell\n# Navigate to Quartz folder\ncd \u003cpath-to-quartz\u003e\n\n# Commit all changes\ngit add .\ngit commit -m \"message describing changes\"\n\n# Push to GitHub to update site\ngit push origin hugo\n```\n\nNote: we specifically push to the `hugo` branch here. Our GitHub action automatically runs everytime a push to is detected to that branch and then updates the `master` branch for redeployment.\n\n### Setting up the Site\nNow let's get this site up and running. Never hosted a site before? No problem. Have a fancy custom domain you already own or want to subdomain your Quartz? That's easy too.\n\nHere, we take advantage of GitHub's free page hosting to deploy our site. Change `baseURL` in `/config.toml`. \n\nMake sure that your `baseURL` has a trailing `/`!\n\n[Reference `config.toml` here](https://github.com/jackyzha0/quartz/blob/hugo/config.toml)\n\n```toml\nbaseURL = \"https://\u003cYOUR-DOMAIN\u003e/\"\n```\n\nIf you are using this under a subdomain (e.g. `\u003cYOUR-GITHUB-USERNAME\u003e.github.io/quartz`), include the trailing `/`. **You need to do this especially if you are using GitHub!**\n\n```toml\nbaseURL = \"https://\u003cYOUR-GITHUB-USERNAME\u003e.github.io/quartz/\"\n```\n\nChange `cname` in `/.github/workflows/deploy.yaml`. Again, if you don't have a custom domain to use, you can use `\u003cYOUR-USERNAME\u003e.github.io`.\n\nPlease note that the `cname` field should *not* have any path `e.g. end with /quartz` or have a trailing `/`.\n\n[Reference `deploy.yaml` here](https://github.com/jackyzha0/quartz/blob/hugo/.github/workflows/deploy.yaml)\n\n```yaml {title=\".github/workflows/deploy.yaml\"}\n- name: Deploy  \n  uses: peaceiris/actions-gh-pages@v3  \n  with:  \n\tgithub_token: ${{ secrets.GITHUB_TOKEN }} # this can stay as is, GitHub fills this in for us!\n\tpublish_dir: ./public  \n\tpublish_branch: master\n\tcname: \u003cYOUR-DOMAIN\u003e\n```\n\nHave a custom domain? [Learn how to set it up with Quartz ](notes/custom%20Domain.md).\n\n### Ignoring Files\nOnly want to publish a subset of all of your notes? Don't worry, Quartz makes this a simple two-step process.\n\n❌ [Excluding pages from being published](notes/ignore%20notes.md)\n\n## Docker Support\nIf you don't want to use a hosting service, you can host using [Docker](notes/docker.md) instead!\nI would *not use this method* unless you know what you are doing.\n\n---\n\nNow that your Quartz is live, let's figure out how to make Quartz really *yours*!\n\n\u003e Step 6: 🎨 [Customizing Quartz](notes/config.md)\n\nHaving problems? Checkout our [FAQ and Troubleshooting guide](notes/troubleshooting.md).\n","lastmodified":"2023-05-07T14:06:19.034298636Z","tags":["setup"]},"/Obsidian/ignore-notes":{"title":"Ignoring Notes","content":"\n### Quartz Ignore\nEdit `ignoreFiles` in `config.toml` to include paths you'd like to exclude from being rendered.\n\n```toml\n...\nignoreFiles = [  \n    \"/content/templates/*\",  \n    \"/content/private/*\", \n    \"\u003cyour path here\u003e\"\n]\n```\n\n`ignoreFiles` supports the use of Regular Expressions (RegEx) so you can ignore patterns as well (e.g. ignoring all `.png`s by doing `\\\\.png$`).\nTo ignore a specific file, you can also add the tag `draft: true` to the frontmatter of a note.\n\n```markdown\n---\ntitle: Some Private Note\ndraft: true\n---\n...\n```\n\nMore details in [Hugo's documentation](https://gohugo.io/getting-started/configuration/#ignore-content-and-data-files-when-rendering).\n\n### Global Ignore\nHowever, just adding to the `ignoreFiles` will only prevent the page from being access through Quartz. If you want to prevent the file from being pushed to GitHub (for example if you have a public repository), you need to also add the path to the `.gitignore` file at the root of the repository.","lastmodified":"2023-05-07T14:06:19.034298636Z","tags":[]},"/Obsidian/kubenetes/Beneifts-of-virtualization":{"title":"Beneifts of virtualization","content":"\n1. **Slash your IT expenses**\n\tVirtualization can reduce IT expenses by consolidating applications onto fewer physical servers.\n\t\n\u003eUtilizing a non-virtualized environment can be inefficient because when you are not consuming the application on the server, the compute is sitting idle and can't be used for other applications. When you virtualize an environment, that single physical server transforms into many virtual machines. These virtual machines can have different operating systems and run different applications while still all being hosted on the single physical server.\n\n\n2. **Reduce downtime and enhance resiliency in disaster recovery situations**\n\tVirtualization can enhance resiliency in disaster recovery situations by allowing for quick and easy replication or cloning of virtual machines from one physical server to another.\n\n\u003eWhen a disaster affects a physical server, someone is responsible for replacing or fixing it—this could take hours or even days. With a virtualized environment, \u003cu\u003eit’s easy to provision and deploy\u003c/u\u003e, allowing you to replicate or clone the virtual machine that’s been affected. The recovery process would take mere minutes—as opposed to the hours it would take to provision and set up a new physical server—significantly enhancing the resiliency of the environment and improving business continuity.\n\n\n3. **Increase efficiency and productivity**\n\tVirtualization can improve scalability and flexibility by allowing for easy deployment and management of virtual machines, Instead of doing this laborious and tedious process of applying the updates server-by-server. \n\n\u003eWith fewer servers, your IT teams will be able to spend less time maintaining the physical hardware and IT infrastructure. You’ll be able to install, update, and maintain the environment across all the VMs in the virtual environment on the server instead of going through the laborious and tedious process of applying the updates server-by-server. \n\u003eLess time dedicated to maintaining the environment increases your team’s efficiency and productivity.\n\n4. **Control independence and DevOps**\n\tVirtualization enables developers to create virtual machines for testing and development, without affecting the production environment, resulting in faster and more agile application development and deployment.\n\n\u003eSince the virtualized environment is segmented into virtual machines, your developers can quickly spin up a virtual machine without impacting a production environment. This is ideal for Dev/Test, as the developer can quickly clone the virtual machine and run a test on the environment.\n\u003e\n\u003eFor example, if a new software patch has been released, someone can clone the virtual machine and apply the latest software update, test the environment, and then pull it into their production application. This increases the speed and agility of an application.\n\n \n5. **Move to be more green-friendly (organizational and environmental)**\n\t When you are able to cut down on the number of physical servers you’re using, it’ll lead to a reduction in the amount of power being consumed. \n\t \n\t This has two green benefits:\n\t-   It reduces expenses for the business, and that money can be reinvested elsewhere.\n\t-   It reduces the carbon footprint of the data center","lastmodified":"2023-05-07T14:06:19.038298666Z","tags":[]},"/Obsidian/kubenetes/CNCF-Cloud-Native-Computing-Foundation":{"title":"CNCF - Cloud Native Computing Foundation","content":"The Cloud Native Computing Foundation (CNCF) is a Linux Foundation project that was founded in 2015 to help advance container technology and align the tech industry around its evolution.","lastmodified":"2023-05-07T14:06:19.038298666Z","tags":[]},"/Obsidian/kubenetes/Categories-of-Hypervisor":{"title":"Categories of Hypervisor","content":"There are two broad categories of hypervisors: Type 1 and Type 2.\n\n### Type 1 hypervisor - Bare Metal Hypervisor\n  \n- A Type 1 hypervisor runs directly on the underlying computer’s physical hardware, interacting directly with its CPU, memory, and physical storage. \n- For this reason, Type 1 hypervisors are also referred to as bare-metal hypervisors. \n- A Type 1 hypervisor takes the place of the host operating system.\n\n##### Advantages of Bare Metal Hypervisors\n- Type 1 hypervisors are highly efficient because they have direct access to physical hardware. \n- This also increases their security, because there is nothing in between them and the CPU that an attacker could compromise. \n- But a Type 1 hypervisor often requires a separate management machine to administer different VMs and control the host hardware.\n\n\n### Type 2 hypervisor - Hosted Hypervisor\n- A Type 2 hypervisor doesn’t run directly on the underlying hardware. \n- Instead, it runs as an application in an OS. \n- Type 2 hypervisors rarely show up in server-based environments. Instead, they’re suitable for individual PC users needing to run multiple operating systems. \n\t- Examples include engineers, security professionals analyzing malware, and business users that need access to applications only available on other software platforms.\n\n##### Advantages of Hosted Hypervisor\n- Type 2 hypervisors often feature additional toolkits for users to install into the guest OS. \n\t- These tools provide enhanced connections between the guest and the host OS, \n\t e.g. they often enable the user to cut and paste between the two or\n\t access host OS files and folders from within the guest VM.\n\n- A Type 2 hypervisor enables quick and easy access to an alternative guest OS (VMs OS) alongside the primary one running on the host system. This makes it great for end-user productivity. \n  A consumer might use it to access their favorite Linux-based development tools while using a speech dictation system only found on Windows, for example.\n\n\n##### Disadvantage of Hosted Hypervisor\n- But because a \u003cu\u003eType 2 hypervisor must access computing, memory, and network resources via the host OS\u003c/u\u003e, **it introduces latency issues that can affect performance.** \n- It also introduces potential security risks if an attacker compromises the host OS because they could then manipulate any guest OS running in the Type 2 hypervisor.\n\n\n\n![[Pasted image 20230507134752.png]]","lastmodified":"2023-05-07T14:06:19.038298666Z","tags":[]},"/Obsidian/kubenetes/Containers-Container-Images":{"title":"Containers \u0026 Container Images","content":"\nA container and a container image are related concepts in the world of [[containerization]], but they are not the same thing.\n\n- [[what is a container image?]]\n- [[what is a container?]]\n\n\nIn summary, \n- a container is an instance of a container image that runs an application, \n- while a container image is a package that contains everything needed to run an application. \nand \n- A container image is used to create containers, which are the actual runtime instances that execute the application.\n\n\n[[what are containers based on?]]\n\n\n\n","lastmodified":"2023-05-07T14:06:19.038298666Z","tags":[]},"/Obsidian/kubenetes/Deployments":{"title":"Deployments","content":"","lastmodified":"2023-05-07T14:06:19.038298666Z","tags":[]},"/Obsidian/kubenetes/Kode-Kloud-Labs-Slack-Community":{"title":"Kode Kloud Labs \u0026 Slack Community","content":"Accessing the Labs\n\nAll hands-on labs are hosted on KodeKloud. Use this link to register for the labs associated with this course. Please make sure to use the same name as your profile in Udemy. That's how we know you are our Udemy student.\n\n  \n\nNote: You don't have to make any additional payment. For now simply enrol in the lab course. We'll tell you when you start practicing once we start learning concepts.\n\n  \n\n**Link:** [https://uklabs.kodekloud.com/courses/labs-kubernetes-for-the-absolute-beginners-hands-on/](https://kodekloud.com/courses/labs-kubernetes-for-the-absolute-beginners-hands-on/)\n\nApply the coupon code **kk-labs-k8b-lakjg328321095305**\n\n\n**username**: prashant.meena@protonmail.com\n**password**: check vault\n\n\n![[Kode Kloud $0 Billing Details - With Coupon Code.png]]\n\n\n\n---\n# Slack Community\nJoin our Slack community by clicking [here](https://kodekloud.com/pages/community).","lastmodified":"2023-05-07T14:06:19.038298666Z","tags":[]},"/Obsidian/kubenetes/Kubernetes":{"title":"Kubernetes","content":"[[Kode Kloud Labs \u0026 Slack Community]]\n[[Kubernetes For Beginners - Kode Kloud.pdf]]\n\n\n[Never install locally](https://www.youtube.com/watch?v=J0NuOlA2xDc\u0026ab_channel=Coderized)\n\n\n[[Virtualization]]\n[[Containers \u0026 Container Images]]\n\n\nKubernetes = [[Containers \u0026 Container Images|Containers]] + orchestration\n\n\nMajor topics starting points\n\n- [[Pod]]\n- [[Deployments]]\n\n\nthen each topics","lastmodified":"2023-05-07T14:06:19.054298786Z","tags":[]},"/Obsidian/kubenetes/Pod":{"title":"Pod","content":"so here I can explaing what the concept is\nand then make out small small question on them\nwhich then can actually become cards linking to one or more differnt questions or topics","lastmodified":"2023-05-07T14:06:19.058298816Z","tags":[]},"/Obsidian/kubenetes/Virtualization":{"title":"Virtualization","content":"[Virtualization Explained - IBM Technology](https://www.youtube.com/watch?v=FZR0rG3HKIk)\n[Virtualization Concept - IBM Technology](https://www.ibm.com/topics/virtualization)\n\nVirtualization (v12n), is a technology that enables the creation of virtual versions of computer hardware, operating systems, storage devices, and networks. It is the foundation of [[cloud computing]].\n\nVirtualization began as a method of **logically dividing the system resources** provided by mainframe computers between different applications. This provides a way to efficiently utilize hardware resources and enables applications to run in a more flexible and scalable manner.\nWhereas traditionally, these applications would bound to hardware\n\n\nVirtualization is a concept that is used by [[What are virtual machines (VMs) |Virtual Machines]] and [[what is a container?|container]], hence virtualization allows us to run multiple virtual machines (VMs) or containers on a single physical host machine, **each with its own isolated environment**. \n\n\n[[Virtualizations Practical Example]]\n\n[[Beneifts of virtualization]]\n\n[[Types of Virtualization]]\n\n\n\nThere are different types of virtualization, including:\n\n1.  Full virtualization: In full virtualization, a hypervisor is used to create multiple virtual machines on a single physical host machine. Each virtual machine runs its own operating system and applications, and they are completely isolated from each other and the host system.\n    \n2.  Para-virtualization: In para-virtualization, the hypervisor provides a virtualized hardware interface to each virtual machine, allowing them to share physical hardware resources. This enables better performance than full virtualization, but it requires the guest operating system to be modified.\n    \n3.  Operating system-level virtualization: In operating system-level virtualization, a single operating system kernel is used to run multiple isolated user-space instances, each with its own file system, network stack, and process space. This is the type of virtualization used by containers.\n    \n4.  Application virtualization: In application virtualization, applications are encapsulated into virtual containers that include all the necessary dependencies, libraries, and configuration files needed to run the application. This enables applications to run on different operating systems without requiring modification.\n    \n\nNow, regarding the relationship between virtualization and containerization, containerization is a type of operating system-level virtualization that allows multiple isolated user-space instances to run on a single operating system kernel. Containers share the same host operating system, but each container has its own file system, network stack, and process space. In contrast, traditional virtualization involves running multiple virtual machines on a single host, each with its own operating system and kernel.\n\nContainerization provides several advantages over traditional virtualization, such as lower overhead, faster startup times, and higher density. Containerization also enables the efficient deployment and scaling of applications, making it a popular choice for modern application development and deployment.","lastmodified":"2023-05-07T14:06:19.058298816Z","tags":[]},"/Obsidian/kubenetes/Virtualizations-Practical-Example":{"title":"Virtualizations Practical Example","content":"[[Virtualization]] is technology that lets you create useful IT services using resources that are traditionally bound to hardware. It allows you to use a physical machine’s full capacity by distributing its capabilities among many users or environments.\n\n\nImagine you have 3 physical servers with individual dedicated purposes. One is a mail server, another is a web server, and the last one runs internal legacy applications. Each server is being used at about 30% capacity—just a fraction of their running potential. \n\n![[server usage - without virutalization.png]]\nTraditionally It was often easier and more reliable to run individual tasks on individual servers: 1 server, 1 operating system, 1 task. \n\nIt wasn’t easy to give 1 server multiple brains. But with virtualization, you can split the mail server into 2 unique ones that can handle independent tasks so the legacy apps can be migrated. It’s the same hardware, you’re just using more of it more efficiently.\n\n![[server usage - with virtualization.png]]\n\nKeeping security in mind, you could split the first server again so it could handle another task—increasing its use from 30%, to 60%, to 90%. \n\nsOnce you do that, the now empty servers could be reused for other tasks or retired altogether to reduce cooling and maintenance costs.","lastmodified":"2023-05-07T14:06:19.058298816Z","tags":[]},"/Obsidian/kubenetes/What-are-virtual-machines-VMs":{"title":"What are virtual machines (VMs)","content":"A virtual machine is a virtual representation, or emulation, of a physical computer. They are often referred to as a **guest**,while the physical machine they run on is referred to as the **host**.\n\nEach VM runs its own operating system (OS) and behaves like an independent computer, even though it is running on just a portion of the actual underlying computer hardware.\n\n\nA VM cannot interact directly with a physical computer. Instead, it needs a lightweight software layer called a [[What is a Hypervisor?|hypervisor]] to coordinate between it and the underlying physical hardware.\n\n\nThis technology can go by many names, including \n- **virtual server**, \n- **virtual server instance (VSI)** and \n- **virtual private server (VPS)**, \n","lastmodified":"2023-05-07T14:06:19.058298816Z","tags":[]},"/Obsidian/kubenetes/What-is-a-Hypervisor":{"title":"What is a Hypervisor?","content":"Hypervisor is a small software layer that enables multiple instances of [[operating systems]] to run alongside each other, sharing the same physical computing resources. \nThis process is called [[Virtualization]], and the operating system instances are referred to as [[What are virtual machines (VMs)|virtual machines (VMs) ]]— software emulations of physical computers.\n\n\nHypervisor is also known as **virtual machine monitor** (VMM) manages these VMs as they run alongside each other. The hypervisor allocates physical computing resources—such as processors, memory, and storage—to each VM. It keeps each VM separate from others, so they don’t interfere with each other. so if, for example, one OS suffers a crash or a security compromise, the others survive\n\n[[Categories of Hypervisor]]\n\nexplaing it\nits type?\nits working?? mybe","lastmodified":"2023-05-07T14:06:19.058298816Z","tags":[]},"/Obsidian/kubenetes/container":{"title":"container","content":"","lastmodified":"2023-05-07T14:06:19.058298816Z","tags":[]},"/Obsidian/kubenetes/what-are-containers-based-on":{"title":"what are containers based on?","content":"Containers are based on the concept of [[operating system-level virtualization]], where multiple isolated user-space instances can run on a single operating system kernel. Containers share the same kernel as the host operating system, but each container has its own file sysstem, network stack, and process space.\n\nContainers can be managed using container orchestration tools like Kubernetes, which automate the deployment, scaling, and management of containers across multiple hosts. Containers are popular in modern software development and deployment because they offer a fast, reliable, and scalable way to package and distribute software applications.\n\n\nA container is a standard unit of software that packages up code and all its dependencies so the application runs quickly and reliably from one computing environment to another.","lastmodified":"2023-05-07T14:06:19.062298846Z","tags":[]},"/Obsidian/kubenetes/what-is-a-container":{"title":"what is a container?","content":"\nIn the context of computing,\n- A container is a lightweight, isolated, and **executable runtime instance** that runs an application and all its dependencies in an isolated environment. \n- Containers are created from container images and are typically used to run and deploy applications in a consistent and portable manner.\n- Containers provide an isolated and consistent environment for applications to run, regardless of the host system they are running on.\n\n\n**Container images become containers at runtime**\n\n\nHence we can say in short\n- A container is a \u003cu\u003estandard unit of software\u003c/u\u003e that packages up the application code and all its dependencies, so the application can run quickly and reliably from one computing environment to another.\n\n\n![[whats included in a container.png]]\n\n\n\n\n![[containerized applications architecture.png]]","lastmodified":"2023-05-07T14:06:19.062298846Z","tags":[]},"/Obsidian/kubenetes/what-is-a-container-image":{"title":"what is a container image?","content":"\nIn the context of computing,\n- A container image is a lightweight, standalone, executable package that contains everything needed to run a piece of software, including application code, runtime environment, system tools, libraries, and settings. \n\n\nContainer Image: A container image is a lightweight, standalone, and executable package that contains all the necessary dependencies, libraries, and configuration files needed to run an application. \n\nA container image is built from a Dockerfile or another container image and can be used to create containers. Container images are typically stored in a container registry and can be shared and distributed to other systems.","lastmodified":"2023-05-07T14:06:19.062298846Z","tags":[]},"/Obsidian/obsidian":{"title":"Obsidian Vault Integration","content":"\n## Setup\nObsidian is the preferred way to use Quartz. You can either create a new Obsidian Vault or link one that your already have.\n\n### New Vault\nIf you don't have an existing Vault, [download Obsidian](https://obsidian.md/) and create a new Vault in the `/content` folder that you created and cloned during the [setup](notes/setup.md) step.\n\n### Linking an existing Vault\nThe easiest way to use an existing Vault is to copy all of your files (directory and hierarchies intact) into the `/content` folder.\n\n## Settings\nGreat, now that you have your Obsidian linked to your Quartz, let's fix some settings so that they play well.\n\nOpen Settings \u003e Files \u0026 Links and look for these two items:\n\n1. Set the **New link format** to **Absolute Path in vault**. If you have a completely flat vault (no folders), this step isn't necessary.\n2. Turn **on** the **Automatically update internal links** setting.\n\n\n![[notes/images/obsidian-settings.png]]*Obsidian Settings*\n\n## Templates\nInserting front matter everytime you want to create a new Note gets annoying really quickly. Luckily, Obsidian supports templates which makes inserting new content really easily.\n\n\u003e [!WARNING]\n\u003e \n\u003e **If you decide to overwrite the `/content` folder completely, don't remove the `/content/templates` folder!**\n\nHead over to Options \u003e Core Plugins and enable the Templates plugin. Then go to Options \u003e Hotkeys and set a hotkey for 'Insert Template' (I recommend `[cmd]+T`). That way, when you create a new note, you can just press the hotkey for a new template and be ready to go!\n\n\u003e 👀 Step 4: [Preview Quartz Changes](notes/preview%20changes.md)\n","lastmodified":"2023-05-07T14:06:19.062298846Z","tags":["setup"]},"/Obsidian/philosophy":{"title":"Quartz Philosophy","content":"\n\u003e “[One] who works with the door open gets all kinds of interruptions, but [they] also occasionally gets clues as to what the world is and what might be important.” — Richard Hamming\n\n## Why Quartz?\nHosting a public digital garden isn't easy. There are an overwhelming number of tutorials, resources, and guides for tools like [Notion](https://www.notion.so/), [Roam](https://roamresearch.com/), and [Obsidian](https://obsidian.md/), yet none of them have super easy to use *free* tools to publish that garden to the world.\n\nI've personally found that\n1. It's nice to access notes from anywhere\n2. Having a public digital garden invites open conversations\n3. It makes keeping personal notes and knowledge *playful and fun*\n\nI was really inspired by [Bianca](https://garden.bianca.digital/) and [Joel](https://joelhooks.com/digital-garden)'s digital gardens and wanted to try making my own.\n\n**The goal of Quartz is to make hosting your own public digital garden free and simple.** You don't even need your own website. Quartz does all of that for you and gives your own little corner of the internet.\n","lastmodified":"2023-05-07T14:06:19.062298846Z","tags":[]},"/Obsidian/preview-changes":{"title":"Preview Changes","content":"\nIf you'd like to preview what your Quartz site looks like before deploying it to the internet, the following\ninstructions guide you through installing the proper dependencies to run it locally.\n\n\n## Install `hugo-obsidian`\nThis step will generate the list of backlinks for Hugo to parse. Ensure you have [Go](https://golang.org/doc/install) (\u003e= 1.16) installed.\n\n```bash\n# Install and link `hugo-obsidian` locally\ngo install github.com/jackyzha0/hugo-obsidian@latest\n```\n\nIf you are running into an error saying that `command not found: hugo-obsidian`, make sure you set your `GOPATH` correctly (see [[notes/troubleshooting#`command not found: hugo-obsidian`|the troubleshooting page]])! This will allow your terminal to correctly recognize hugo-obsidian as an executable.\n\n##  Installing Hugo\nHugo is the static site generator that powers Quartz. [Install Hugo with \"extended\" Sass/SCSS version](https://gohugo.io/getting-started/installing/) first. Then,\n\n```bash\n# Navigate to your local Quartz folder\ncd \u003clocation-of-your-local-quartz\u003e\n\n# Start local server\nmake serve\n\n# View your site in a browser at http://localhost:1313/\n```\n\n\u003e [!INFO] Docker Support\n\u003e\n\u003e If you have the Docker CLI installed already, you can avoid installing `hugo-obsidian` and `hugo`. Instead, open your terminal, navigate to your folder with Quartz and run `make docker`\n\nAfterwards, start the Hugo server as shown above and your local backlinks and interactive graph should be populated! Now, let's get it hosted online.\n\n\u003e 🌍 Step 5: [Hosting Quartz online!](notes/hosting.md)\n","lastmodified":"2023-05-07T14:06:19.062298846Z","tags":["setup"]},"/Obsidian/search":{"title":"Search","content":"\nQuartz supports two modes of searching through content.\n\n## Full-text\nFull-text search is the default in Quartz. It produces results that *exactly* match the search query. This is easier to setup but usually produces lower quality matches.\n\n```yaml {title=\"data/config.yaml\"}\n# the default option\nenableSemanticSearch: false\n```\n\n## Natural Language\nNatural language search is powered by [Operand](https://beta.operand.ai/). It understands language like a person does and finds results that best match user intent. In this sense, it is closer to how Google Search works.\n\nNatural language search tends to produce higher quality results than full-text search.\n\nHere's how to set it up.\n\n1. Login or Register for a new Operand account. Click the verification link sent to your email, and you'll be redirected to the dashboard. (Note) You do not need to enter a credit card to create an account, or get started with the Operand API. The first $10 of usage each month is free. To learn more, see pricing. If you go over your free quota, we'll (politely) reach out and ask you to configure billing.\n2. Create your first index. On the dashboard, under \"Indexes\", enter the name and description of your index, and click \"Create Index\". Note down the ID of the index (obtained by clicking on the index name in the list of indexes), as you'll need it in the next step. IDs are unique to each index, and look something like `uqv1duxxbdxu`.\n3. Click into the index you've created. Under \"Index Something\", select \"SITEMAP\" from the dropdown and click \"Add Source\".\n4. For the \"Sitemap.xml URL\", put your deployed site's base URL followed by `sitemap.xml`. For example, for `quartz.jzhao.xyz`, put `https://quartz.jzhao.xyz/sitemap.xml`. Leave the URL Regex empty. \n5. Get your API key. On the dashboard, under \"API Keys\", you can manage your API keys. If you don't already have an API key, click \"Create API Key\". You'll need this for the next step.\n6. Open `data/config.yaml`. Set `enableSemanticSearch` to `true`, `operandApiKey` to your copied key, and `operandIndexId` to the ID of the index we created from earlier..\n\n```yaml {title=\"data/config.yaml\"}\n# the default option\nsearch:\n  enableSemanticSearch: true\n  operandApiKey: \"jp9k5hudse2a828z98kxd6z3payi8u90rnjf\"\n  operandIndexId: \"s0kf3bd6tldw\"\n```\n7. Push your changes to the site and wait for it to deploy.\n8. Check the Operand dashboard and wait for your site to index. Enjoy natural language search powered by Operand!\n","lastmodified":"2023-05-07T14:06:19.062298846Z","tags":[]},"/Obsidian/setup":{"title":"Setup","content":"\n## Making your own Quartz\nSetting up Quartz requires a basic understanding of `git`. If you are unfamiliar, [this resource](https://resources.nwplus.io/2-beginner/how-to-git-github.html) is a great place to start!\n\n### Forking\n\u003e A fork is a copy of a repository. Forking a repository allows you to freely experiment with changes without affecting the original project.\n\nNavigate to the GitHub repository for the Quartz project:\n\n📁 [Quartz Repository](https://github.com/jackyzha0/quartz)\n\nThen, Fork the repository into your own GitHub account. **Make sure that when you fork, you _uncheck_ the 'Copy the `hugo` branch only' option**.\n\nIf you don't have an account, you can make on for free [here](https://github.com/join). More details about forking a repo can be found on [GitHub's documentation](https://docs.github.com/en/get-started/quickstart/fork-a-repo).\n\n![[notes/images/fork.png]]\n\n### Cloning\nAfter you've made a fork of the repository, you need to download the files locally onto your machine. Ensure you have `git`, then type the following command in your terminal replacing `YOUR-USERNAME` with your GitHub username.\n\n```shell\ngit clone https://github.com/YOUR-USERNAME/quartz\n```\n\n## Editing\nGreat! Now you have everything you need to start editing and growing your digital garden. If you're ready to start writing content already, check out the recommended flow for editing notes in Quartz.\n\n\u003e ✏️ Step 2: [Editing Notes in Quartz](notes/editing.md)\n\nHaving problems? Checkout our [FAQ and Troubleshooting guide](notes/troubleshooting.md).\n","lastmodified":"2023-05-07T14:06:19.062298846Z","tags":["setup"]},"/Obsidian/showcase":{"title":"Showcase","content":"\nWant to see what Quartz can do? Here are some cool community gardens :)\n\n- [Quartz Documentation (this site!)](https://quartz.jzhao.xyz/)\n- [Jacky Zhao's Garden](https://jzhao.xyz/)\n- [Scaling Synthesis - A hypertext research notebook](https://scalingsynthesis.com/)\n- [AWAGMI Intern Notes](https://notes.awagmi.xyz/)\n- [Shihyu's PKM](https://shihyuho.github.io/pkm/)\n- [SlRvb's Site](https://slrvb.github.io/Site/)\n- [Course notes for Information Technology Advanced Theory](https://a2itnotes.github.io/quartz/)\n- [Brandon Boswell's Garden](https://brandonkboswell.com)\n- [Siyang's Courtyard](https://siyangsun.github.io/courtyard/)\n- [Data Dictionary 🧠](https://glossary.airbyte.com/)\n- [sspaeti.com's Second Brain](https://brain.sspaeti.com/)\n- [oldwinterの数字花园](https://garden.oldwinter.top/)\n- [SethMB Work](https://sethmb.xyz/)\n- [Abhijeet's Math Wiki](https://abhmul.github.io/quartz/Math-Wiki/)\n- [Mike's AI Garden 🤖🪴](https://mwalton.me/)\n\nIf you want to see your own on here, submit a [Pull Request adding yourself to this file](https://github.com/jackyzha0/quartz/blob/hugo/content/notes/showcase.md)!\n","lastmodified":"2023-05-07T14:06:19.062298846Z","tags":[]},"/Obsidian/troubleshooting":{"title":"Troubleshooting and FAQ","content":"\nStill having trouble? Here are a list of common questions and problems people encounter when installing Quartz.\n\nWhile you're here, join our [Discord](https://discord.gg/cRFFHYye7t) :)\n\n### Does Quartz have Latex support?\nYes! See [CJK + Latex Support (测试)](notes/CJK%20+%20Latex%20Support%20(测试).md) for a brief demo.\n\n### Can I use \\\u003cObsidian Plugin\\\u003e in Quartz?\nUnless it produces direct Markdown output in the file, no. There currently is no way to bundle plugin code with Quartz.\n\nThe easiest way would be to add your own HTML partial that supports the functionality you are looking for.\n\n### My GitHub pages is just showing the README and not Quartz\nMake sure you set the source to deploy from `master` (and not `hugo`) using `/ (root)`! See more in the [hosting](/notes/hosting) guide\n\n### Some of my pages have 'January 1, 0001' as the last modified date\nThis is a problem caused by `git` treating files as case-insensitive by default and some of your posts probably have capitalized file names. You can turn this off in your Quartz by running this command.\n\n```shell\n# in the root of your Quartz (same folder as config.toml)\ngit config core.ignorecase true\n\n# or globally (not recommended)\ngit config --global core.ignorecase true\n```\n\n### Can I publish only a subset of my pages?\nYes! Quartz makes selective publishing really easy. Heres a guide on [excluding pages from being published](notes/ignore%20notes.md).\n\n### Can I host this myself and not on GitHub Pages?\nYes! All built files can be found under `/public` in the `master` branch. More details under [hosting](notes/hosting.md).\n\n### `command not found: hugo-obsidian`\nMake sure you set your `GOPATH` correctly! This will allow your terminal to correctly recognize `hugo-obsidian` as an executable.\n\n```shell\n# Add the following 2 lines to your ~/.bash_profile (~/.zshrc if you are on Mac)\nexport GOPATH=/Users/$USER/go\nexport PATH=$GOPATH/bin:$PATH\n\n# In your current terminal, to reload the session\nsource ~/.bash_profile # again, (~/.zshrc if you are on Mac)\n```\n\n### How come my notes aren't being rendered?\nYou probably forgot to include front matter in your Markdown files. You can either setup [Obsidian](notes/obsidian.md) to do this for you or you need to manually define it. More details in [the 'how to edit' guide](notes/editing.md).\n\n### My custom domain isn't working!\nWalk through the steps in [the hosting guide](notes/hosting.md) again. Make sure you wait 30 min to 1 hour for changes to take effect.\n\n### How do I setup analytics?\nQuartz by default uses [Plausible](https://plausible.io/) for analytics. \n\nIf you would prefer to use Google Analytics, you can follow this [guide in the Hugo documentation](https://gohugo.io/templates/internal/#google-analytics). \n\nAlternatively, you can also import your Google Analytics data into Plausible by [following this guide](https://plausible.io/docs/google-analytics-import).\n\n\n### How do I change the content on the home page?\nTo edit the main home page, open `/content/_index.md`.\n\n### How do I change the colours?\nYou can change the theme by editing `assets/custom.scss`. More details on customization and themeing can be found in the [customization guide](notes/config.md).\n\n### How do I add images?\nYou can put images anywhere in the `/content` folder.\n\n```markdown\nExample image (source is in content/notes/images/example.png)\n![Example Image](/content/notes/images/example.png)\n```\n\n### My Interactive Graph and Backlinks aren't up to date\nBy default, the `linkIndex.json` (which Quartz needs to generate the Interactive Graph and Backlinks) are not regenerated locally. To set that up, see the guide on [local editing](notes/editing.md)\n\n### Can I use React/Vue/some other framework?\nNot out of the box. You could probably make it work by editing `/layouts/_default/single.html` but that's not what Quartz is designed to work with. 99% of things you are trying to do with those frameworks you can accomplish perfectly fine using just vanilla HTML/CSS/JS.\n\n## Still Stuck?\nQuartz isn't perfect! If you're still having troubles, file an issue in the GitHub repo with as much information as you can reasonably provide. Alternatively, you can message me on [Twitter](https://twitter.com/_jzhao) and I'll try to get back to you as soon as I can.\n\n🐛 [Submit an Issue](https://github.com/jackyzha0/quartz/issues)\n","lastmodified":"2023-05-07T14:06:19.062298846Z","tags":[]},"/Obsidian/updating":{"title":"Updating","content":"\nHaven't updated Quartz in a while and want all the cool new optimizations? On Unix/Mac systems you can run the following command for a one-line update! This command will show you a log summary of all commits since you last updated, press `q` to acknowledge this. Then, it will show you each change in turn and press `y` to accept the patch or `n` to reject it. Usually you should press `y` for most of these unless it conflicts with existing changes you've made! \n\n```shell\nmake update\n```\n\nOr, if you don't want the interactive parts and just want to force update your local garden (this assumed that you are okay with some of your personalizations been overriden!)\n\n```shell\nmake update-force\n```\n\nOr, manually checkout the changes yourself.\n\n\u003e [!warning] Warning!\n\u003e\n\u003e If you customized the files in `data/`, or anything inside `layouts/`, your customization may be overwritten!\n\u003e Make sure you have a copy of these changes if you don't want to lose them.\n\n\n```shell\n# add Quartz as a remote host\ngit remote add upstream git@github.com:jackyzha0/quartz.git\n\n# index and fetch changes\ngit fetch upstream\ngit checkout -p upstream/hugo -- layouts .github Makefile assets/js assets/styles/base.scss assets/styles/darkmode.scss config.toml data \n```\n","lastmodified":"2023-05-07T14:06:19.062298846Z","tags":[]},"/callouts":{"title":"Callouts","content":"\n## Callout support\n\nQuartz supports the same Admonition-callout syntax as Obsidian.\n\nThis includes\n- 12 Distinct callout types (each with several aliases)\n- Collapsable callouts\n\nSee [documentation on supported types and syntax here](https://help.obsidian.md/Editing+and+formatting/Callouts).\n\n## Showcase\n\n\u003e [!EXAMPLE] Examples\n\u003e\n\u003e Aliases: example\n\n\u003e [!note] Notes\n\u003e\n\u003e Aliases: note\n\n\u003e [!abstract] Summaries \n\u003e\n\u003e Aliases: abstract, summary, tldr\n\n\u003e [!info] Info \n\u003e\n\u003e Aliases: info, todo\n\n\u003e [!tip] Hint \n\u003e\n\u003e Aliases: tip, hint, important\n\n\u003e [!success] Success \n\u003e\n\u003e Aliases: success, check, done\n\n\u003e [!question] Question \n\u003e\n\u003e Aliases: question, help, faq\n\n\u003e [!warning] Warning \n\u003e\n\u003e Aliases: warning, caution, attention\n\n\u003e [!failure] Failure \n\u003e\n\u003e Aliases: failure, fail, missing\n\n\u003e [!danger] Error\n\u003e\n\u003e Aliases: danger, error\n\n\u003e [!bug] Bug\n\u003e\n\u003e Aliases: bug\n\n\u003e [!quote] Quote\n\u003e\n\u003e Aliases: quote, cite\n","lastmodified":"2023-05-07T14:06:19.062298846Z","tags":[]},"/config":{"title":"Configuration","content":"\n## Configuration\nQuartz is designed to be extremely configurable. You can find the bulk of the configuration scattered throughout the repository depending on how in-depth you'd like to get.\n\nThe majority of configuration can be found under `data/config.yaml`. An annotated example configuration is shown below.\n\n```yaml {title=\"data/config.yaml\"}\n# The name to display in the footer\nname: Jacky Zhao\n\n# whether to globally show the table of contents on each page\n# this can be turned off on a per-page basis by adding this to the\n# front-matter of that note\nenableToc: true\n\n# whether to by-default open or close the table of contents on each page\nopenToc: false\n\n# whether to display on-hover link preview cards\nenableLinkPreview: true\n\n# whether to render titles for code blocks\nenableCodeBlockTitle: true \n\n# whether to render copy buttons for code blocks\nenableCodeBlockCopy: true \n\n# whether to render callouts\nenableCallouts: true\n\n# whether to try to process Latex\nenableLatex: true\n\n# whether to enable single-page-app style rendering\n# this prevents flashes of unstyled content and improves\n# smoothness of Quartz. More info in issue #109 on GitHub\nenableSPA: true\n\n# whether to render a footer\nenableFooter: true\n\n# whether backlinks of pages should show the context in which\n# they were mentioned\nenableContextualBacklinks: true\n\n# whether to show a section of recent notes on the home page\nenableRecentNotes: false\n\n# whether to display an 'edit' button next to the last edited field\n# that links to github\nenableGitHubEdit: true\nGitHubLink: https://github.com/jackyzha0/quartz/tree/hugo/content\n\n# whether to render mermaid diagrams\nenableMermaid: true\n\n# whether to use Operand to power semantic search\n# IMPORTANT: replace this API key with your own if you plan on using\n# Operand search!\nsearch:\n  enableSemanticSearch: false\n  operandApiKey: \"REPLACE-WITH-YOUR-OPERAND-API-KEY\"\n  operandIndexId: \"REPLACE-WITH-YOUR-OPERAND-INDEX-ID\"\n\n# page description used for SEO\ndescription:\n  Host your second brain and digital garden for free. Quartz features extremely fast full-text search,\n  Wikilink support, backlinks, local graph, tags, and link previews.\n\n# title of the home page (also for SEO)\npage_title:\n  \"🪴 Quartz 3.3\"\n\n# links to show in the footer\nlinks:\n  - link_name: Twitter\n    link: https://twitter.com/_jzhao\n  - link_name: Github\n    link: https://github.com/jackyzha0\n```\n\n### Code Block Titles\nTo add code block titles with Quartz:\n\n1. Ensure that code block titles are enabled in Quartz's configuration:\n\n    ```yaml {title=\"data/config.yaml\", linenos=false}\n    enableCodeBlockTitle: true\n    ```\n\n2. Add the `title` attribute to the desired [code block\n   fence](https://gohugo.io/content-management/syntax-highlighting/#highlighting-in-code-fences):\n\n      ```markdown {linenos=false}\n       ```yaml {title=\"data/config.yaml\"}\n       enableCodeBlockTitle: true  # example from step 1\n       ```\n      ```\n\n**Note** that if `{title=\u003cmy-title\u003e}` is included, and code block titles are not\nenabled, no errors will occur, and the title attribute will be ignored.\n\n### HTML Favicons\nIf you would like to customize the favicons of your Quartz-based website, you \ncan add them to the `data/config.yaml` file. The **default** without any set \n`favicon` key is:\n\n```html {title=\"layouts/partials/head.html\", linenostart=15}\n\u003clink rel=\"shortcut icon\" href=\"icon.png\" type=\"image/png\"\u003e\n```\n\nThe default can be overridden by defining a value to the `favicon` key in your \n`data/config.yaml` file. For example, here is a `List[Dictionary]` example format, which is\nequivalent to the default:\n\n```yaml {title=\"data/config.yaml\", linenos=false}\nfavicon:\n  - { rel: \"shortcut icon\", href: \"icon.png\", type: \"image/png\" }\n#  - { ... } # Repeat for each additional favicon you want to add\n```\n\nIn this format, the keys are identical to their HTML representations.\n\nIf you plan to add multiple favicons generated by a website (see list below), it\nmay be easier to define it as HTML. Here is an example which appends the \n**Apple touch icon** to Quartz's default favicon:\n\n```yaml {title=\"data/config.yaml\", linenos=false}\nfavicon: |\n  \u003clink rel=\"shortcut icon\" href=\"icon.png\" type=\"image/png\"\u003e\n  \u003clink rel=\"apple-touch-icon\" sizes=\"180x180\" href=\"/apple-touch-icon.png\"\u003e\n```\n\nThis second favicon will now be used as a web page icon when someone adds your \nwebpage to the home screen of their Apple device. If you are interested in more \ninformation about the current and past standards of favicons, you can read \n[this article](https://www.emergeinteractive.com/insights/detail/the-essentials-of-favicons/).\n\n**Note** that all generated favicon paths, defined by the `href` \nattribute, are relative to the `static/` directory.\n\n### Graph View\nTo customize the Interactive Graph view, you can poke around `data/graphConfig.yaml`.\n\n```yaml {title=\"data/graphConfig.yaml\"}\n# if true, a Global Graph will be shown on home page with full width, no backlink.\n# A different set of Local Graphs will be shown on sub pages.\n# if false, Local Graph will be default on every page as usual\nenableGlobalGraph: false\n\n### Local Graph ###\nlocalGraph:\n    # whether automatically generate a legend\n    enableLegend: false\n    \n    # whether to allow dragging nodes in the graph\n    enableDrag: true\n    \n    # whether to allow zooming and panning the graph\n    enableZoom: true\n    \n    # how many neighbours of the current node to show (-1 is all nodes)\n    depth: 1\n    \n    # initial zoom factor of the graph\n    scale: 1.2\n    \n    # how strongly nodes should repel each other\n    repelForce: 2\n\n    # how strongly should nodes be attracted to the center of gravity\n    centerForce: 1\n\n    # what the default link length should be\n    linkDistance: 1\n    \n    # how big the node labels should be\n    fontSize: 0.6\n    \n    # scale at which to start fading the labes on nodes\n    opacityScale: 3\n\n### Global Graph ###\nglobalGraph:\n\t# same settings as above\n\n### For all graphs ###\n# colour specific nodes path off of their path\npaths:\n  - /moc: \"#4388cc\"\n```\n\n\n## Styling\nWant to go even more in-depth? You can add custom CSS styling and change existing colours through editing `assets/styles/custom.scss`. If you'd like to target specific parts of the site, you can add ids and classes to the HTML partials in `/layouts/partials`. \n\n### Partials\nPartials are what dictate what gets rendered to the page. Want to change how pages are styled and structured? You can edit the appropriate layout in `/layouts`.\n\nFor example, the structure of the home page can be edited through `/layouts/index.html`. To customize the footer, you can edit `/layouts/partials/footer.html`\n\nMore info about partials on [Hugo's website.](https://gohugo.io/templates/partials/)\n\nStill having problems? Checkout our [FAQ and Troubleshooting guide](notes/troubleshooting.md).\n\n## Language Support\n[CJK + Latex Support (测试)](notes/CJK%20+%20Latex%20Support%20(测试).md) comes out of the box with Quartz.\n\nWant to support languages that read from right-to-left (like Arabic)? Hugo (and by proxy, Quartz) supports this natively.\n\nFollow the steps [Hugo provides here](https://gohugo.io/content-management/multilingual/#configure-languages) and modify your `config.toml`\n\nFor example:\n\n```toml\ndefaultContentLanguage = 'ar'\n[languages]\n  [languages.ar]\n    languagedirection = 'rtl'\n    title = 'مدونتي'\n    weight = 1\n```\n","lastmodified":"2023-05-07T14:06:19.062298846Z","tags":["setup"]},"/custom-Domain":{"title":"Custom Domain","content":"\n### Registrar\nThis step is only applicable if you are using a **custom domain**! If you are using a `\u003cYOUR-USERNAME\u003e.github.io` domain, you can skip this step.\n\nFor this last bit to take effect, you also need to create a CNAME record with the DNS provider you register your domain with (i.e. NameCheap, Google Domains).\n\nGitHub has some [documentation on this](https://docs.github.com/en/pages/configuring-a-custom-domain-for-your-github-pages-site/managing-a-custom-domain-for-your-github-pages-site), but the tldr; is to\n\n1. Go to your forked repository (`github.com/\u003cYOUR-GITHUB-USERNAME\u003e/quartz`) settings page and go to the Pages tab. Under \"Custom domain\", type your custom domain, then click **Save**.\n2. Go to your DNS Provider and create a CNAME record that points from your domain to `\u003cYOUR-GITHUB-USERNAME.github.io.` (yes, with the trailing period).\n\n\t![Example Configuration for Quartz](/notes/images/google-domains.png)*Example Configuration for Quartz*\n3. Wait 30 minutes to an hour for the network changes to kick in.\n4. Done!","lastmodified":"2023-05-07T14:06:19.062298846Z","tags":[]},"/docker":{"title":"Hosting with Docker","content":"\nIf you want to host Quartz on a machine without using a webpage hosting service, it may be easier to [install Docker Compose](https://docs.docker.com/compose/install/) and follow the instructions below than to [install Quartz's dependencies manually](notes/preview%20changes.md).\n## Hosting Quartz Locally\nYou can serve Quartz locally at `http://localhost:1313` with the following script, replacing `/path/to/quartz` with the \nactual path to your Quartz folder.\n\ndocker-compose.yml\n```\nservices:\n  quartz-hugo:\n    image: ghcr.io/jackyzha0/quartz:hugo\n    container_name: quartz-hugo\n    volumes:\n      - /path/to/quartz:/quartz\n    ports:\n      - 1313:1313\n\n    # optional\n    environment:\n      - HUGO_BIND=0.0.0.0\n      - HUGO_BASEURL=http://localhost\n      - HUGO_PORT=1313\n      - HUGO_APPENDPORT=true\n      - HUGO_LIVERELOADPORT=-1\n```\n\nThen run with: `docker-compose up -d` in the same directory as your `docker-compose.yml` file.\n\nWhile the container is running, you can update the `quartz` fork with: `docker exec -it quartz-hugo make update`.\n\n## Exposing Your Container to the Internet\n\n### To Your Public IP Address with Port Forwarding (insecure)\n\nAssuming you are already familiar with [port forwarding](https://en.wikipedia.org/wiki/Port_forwarding) and [setting it up with your router model](https://portforward.com):\n\n1. You should set the environment variable `HUGO_BASEURL=http://your-public-ip` and then start your container.\n2. Set up port forwarding on your router from port `p` to `your-local-ip:1313`.\n3. You should now be able to access Quartz from outside your local network at `http://your-public-ip:p`.\n\nHowever, your HTTP connection will be unencrypted and **this method is not secure**.\n\n### To a Domain using Cloudflare Proxy\n\n1. Port forward 443 (HTTPS) from your machine.\n2. Buy a custom domain (say, `your-domain.com`) from [Cloudflare](https://www.cloudflare.com/products/registrar/). Point a DNS A record from `your-domain.com` to your public IP address and enable the proxy.\n3. Set the environment variables `HUGO_BASEURL=https://your-domain.com`, `HUGO_PORT=443`, and `HUGO_APPENDPORT=false`. Change `1313:1313` to `443:443` for the `ports` in `docker-compose.yml`.\n4. Spin up your Quartz container and enjoy it at `https://your-domain.com`!\n\n### To a Domain using a Reverse Proxy\n\nIf you want to serve more than just Quartz to the internet on this machine (or don't want to use the Cloudflare registrar and proxy), you should follow the steps in the section above (as appropriate) and also set up a reverse proxy, like [Traefik](https://doc.traefik.io/traefik). Be sure to configure your TLS certificates too!\n","lastmodified":"2023-05-07T14:06:19.062298846Z","tags":["setup"]},"/editing":{"title":"Editing Content in Quartz","content":"\n## Editing \nQuartz runs on top of [Hugo](https://gohugo.io/) so all notes are written in [Markdown](https://www.markdownguide.org/getting-started/).\n\n### Folder Structure\nHere's a rough overview of what's what.\n\n**All content in your garden can found in the `/content` folder.** To make edits, you can open any of the files and make changes directly and save it. You can organize content into any folder you'd like.\n\n**To edit the main home page, open `/content/_index.md`.**\n\n### Front Matter\nHugo is picky when it comes to metadata for files. Make sure that your title is double-quoted and that you have a title defined at the top of your file like so, otherwise the generated page will not have a title!\n\nYou can also add tags here as well.\n\n```yaml\n---\ntitle: \"Example Title\"\ntags:\n- example-tag\n---\n\nRest of your content here...\n```\n\n### Obsidian\nI recommend using [Obsidian](http://obsidian.md/) as a way to edit and grow your digital garden. It comes with a really nice editor and graphical interface to preview all of your local files.\n\nThis step is **highly recommended**.\n\n\u003e 🔗 Step 3: [How to setup your Obsidian Vault to work with Quartz](notes/obsidian.md)\n\n## Previewing Changes\nThis step is purely optional and mostly for those who want to see the published version of their digital garden locally before opening it up to the internet. This is *highly recommended* but not required.\n\n\u003e 👀 Step 4: [Preview Quartz Changes](notes/preview%20changes.md)\n\nFor those who like to live life more on the edge, viewing the garden through Obsidian gets you pretty close to the real thing.\n\n## Publishing Changes\nNow that you know the basics of managing your digital garden using Quartz, you can publish it to the internet!\n\n\u003e 🌍 Step 5: [Hosting Quartz online!](notes/hosting.md)\n\nHaving problems? Checkout our [FAQ and Troubleshooting guide](notes/troubleshooting.md).\n","lastmodified":"2023-05-07T14:06:19.062298846Z","tags":["setup"]},"/hosting":{"title":"Deploying Quartz to the Web","content":"\n## Hosting on GitHub Pages\nQuartz is designed to be effortless to deploy. If you forked and cloned Quartz directly from the repository, everything should already be good to go! Follow the steps below.\n\n### Enable GitHub Actions Permissions\nBy default, GitHub disables workflows from modifying your files (for good reason!). However, Quartz needs this to write the actual site files back to GitHub.\n\nHead to `Settings \u003e Action \u003e General \u003e Workflow Permissions` and choose `Read and Write Permissions`\n\n![[notes/images/github-actions.png]]\n*Enable GitHub Actions*\n\n### Enable GitHub Pages\n\nHead to the 'Settings' tab of your forked repository and go to the 'Pages' tab.\n\n1. (IMPORTANT) Set the source to deploy from `master` (and not `hugo`) using `/ (root)`\n2. Set a custom domain here if you have one!\n\n![Enable GitHub Pages](/notes/images/github-pages.png)*Enable GitHub Pages*\n\n### Pushing Changes\nTo see your changes on the internet, we need to push it them to GitHub. Quartz is a `git` repository so updating it is the same workflow as you would follow as if it were just a regular software project.\n\n```shell\n# Navigate to Quartz folder\ncd \u003cpath-to-quartz\u003e\n\n# Commit all changes\ngit add .\ngit commit -m \"message describing changes\"\n\n# Push to GitHub to update site\ngit push origin hugo\n```\n\nNote: we specifically push to the `hugo` branch here. Our GitHub action automatically runs everytime a push to is detected to that branch and then updates the `master` branch for redeployment.\n\n### Setting up the Site\nNow let's get this site up and running. Never hosted a site before? No problem. Have a fancy custom domain you already own or want to subdomain your Quartz? That's easy too.\n\nHere, we take advantage of GitHub's free page hosting to deploy our site. Change `baseURL` in `/config.toml`. \n\nMake sure that your `baseURL` has a trailing `/`!\n\n[Reference `config.toml` here](https://github.com/jackyzha0/quartz/blob/hugo/config.toml)\n\n```toml\nbaseURL = \"https://\u003cYOUR-DOMAIN\u003e/\"\n```\n\nIf you are using this under a subdomain (e.g. `\u003cYOUR-GITHUB-USERNAME\u003e.github.io/quartz`), include the trailing `/`. **You need to do this especially if you are using GitHub!**\n\n```toml\nbaseURL = \"https://\u003cYOUR-GITHUB-USERNAME\u003e.github.io/quartz/\"\n```\n\nChange `cname` in `/.github/workflows/deploy.yaml`. Again, if you don't have a custom domain to use, you can use `\u003cYOUR-USERNAME\u003e.github.io`.\n\nPlease note that the `cname` field should *not* have any path `e.g. end with /quartz` or have a trailing `/`.\n\n[Reference `deploy.yaml` here](https://github.com/jackyzha0/quartz/blob/hugo/.github/workflows/deploy.yaml)\n\n```yaml {title=\".github/workflows/deploy.yaml\"}\n- name: Deploy  \n  uses: peaceiris/actions-gh-pages@v3  \n  with:  \n\tgithub_token: ${{ secrets.GITHUB_TOKEN }} # this can stay as is, GitHub fills this in for us!\n\tpublish_dir: ./public  \n\tpublish_branch: master\n\tcname: \u003cYOUR-DOMAIN\u003e\n```\n\nHave a custom domain? [Learn how to set it up with Quartz ](notes/custom%20Domain.md).\n\n### Ignoring Files\nOnly want to publish a subset of all of your notes? Don't worry, Quartz makes this a simple two-step process.\n\n❌ [Excluding pages from being published](notes/ignore%20notes.md)\n\n## Docker Support\nIf you don't want to use a hosting service, you can host using [Docker](notes/docker.md) instead!\nI would *not use this method* unless you know what you are doing.\n\n---\n\nNow that your Quartz is live, let's figure out how to make Quartz really *yours*!\n\n\u003e Step 6: 🎨 [Customizing Quartz](notes/config.md)\n\nHaving problems? Checkout our [FAQ and Troubleshooting guide](notes/troubleshooting.md).\n","lastmodified":"2023-05-07T14:06:19.062298846Z","tags":["setup"]},"/ignore-notes":{"title":"Ignoring Notes","content":"\n### Quartz Ignore\nEdit `ignoreFiles` in `config.toml` to include paths you'd like to exclude from being rendered.\n\n```toml\n...\nignoreFiles = [  \n    \"/content/templates/*\",  \n    \"/content/private/*\", \n    \"\u003cyour path here\u003e\"\n]\n```\n\n`ignoreFiles` supports the use of Regular Expressions (RegEx) so you can ignore patterns as well (e.g. ignoring all `.png`s by doing `\\\\.png$`).\nTo ignore a specific file, you can also add the tag `draft: true` to the frontmatter of a note.\n\n```markdown\n---\ntitle: Some Private Note\ndraft: true\n---\n...\n```\n\nMore details in [Hugo's documentation](https://gohugo.io/getting-started/configuration/#ignore-content-and-data-files-when-rendering).\n\n### Global Ignore\nHowever, just adding to the `ignoreFiles` will only prevent the page from being access through Quartz. If you want to prevent the file from being pushed to GitHub (for example if you have a public repository), you need to also add the path to the `.gitignore` file at the root of the repository.","lastmodified":"2023-05-07T14:06:19.066298877Z","tags":[]},"/kubenetes/Beneifts-of-virtualization":{"title":"Beneifts of virtualization","content":"\n1. **Slash your IT expenses**\n\tVirtualization can reduce IT expenses by consolidating applications onto fewer physical servers.\n\t\n\u003eUtilizing a non-virtualized environment can be inefficient because when you are not consuming the application on the server, the compute is sitting idle and can't be used for other applications. When you virtualize an environment, that single physical server transforms into many virtual machines. These virtual machines can have different operating systems and run different applications while still all being hosted on the single physical server.\n\n\n2. **Reduce downtime and enhance resiliency in disaster recovery situations**\n\tVirtualization can enhance resiliency in disaster recovery situations by allowing for quick and easy replication or cloning of virtual machines from one physical server to another.\n\n\u003eWhen a disaster affects a physical server, someone is responsible for replacing or fixing it—this could take hours or even days. With a virtualized environment, \u003cu\u003eit’s easy to provision and deploy\u003c/u\u003e, allowing you to replicate or clone the virtual machine that’s been affected. The recovery process would take mere minutes—as opposed to the hours it would take to provision and set up a new physical server—significantly enhancing the resiliency of the environment and improving business continuity.\n\n\n3. **Increase efficiency and productivity**\n\tVirtualization can improve scalability and flexibility by allowing for easy deployment and management of virtual machines, Instead of doing this laborious and tedious process of applying the updates server-by-server. \n\n\u003eWith fewer servers, your IT teams will be able to spend less time maintaining the physical hardware and IT infrastructure. You’ll be able to install, update, and maintain the environment across all the VMs in the virtual environment on the server instead of going through the laborious and tedious process of applying the updates server-by-server. \n\u003eLess time dedicated to maintaining the environment increases your team’s efficiency and productivity.\n\n4. **Control independence and DevOps**\n\tVirtualization enables developers to create virtual machines for testing and development, without affecting the production environment, resulting in faster and more agile application development and deployment.\n\n\u003eSince the virtualized environment is segmented into virtual machines, your developers can quickly spin up a virtual machine without impacting a production environment. This is ideal for Dev/Test, as the developer can quickly clone the virtual machine and run a test on the environment.\n\u003e\n\u003eFor example, if a new software patch has been released, someone can clone the virtual machine and apply the latest software update, test the environment, and then pull it into their production application. This increases the speed and agility of an application.\n\n \n5. **Move to be more green-friendly (organizational and environmental)**\n\t When you are able to cut down on the number of physical servers you’re using, it’ll lead to a reduction in the amount of power being consumed. \n\t \n\t This has two green benefits:\n\t-   It reduces expenses for the business, and that money can be reinvested elsewhere.\n\t-   It reduces the carbon footprint of the data center","lastmodified":"2023-05-07T14:06:19.066298877Z","tags":[]},"/kubenetes/CNCF-Cloud-Native-Computing-Foundation":{"title":"CNCF - Cloud Native Computing Foundation","content":"The Cloud Native Computing Foundation (CNCF) is a Linux Foundation project that was founded in 2015 to help advance container technology and align the tech industry around its evolution.","lastmodified":"2023-05-07T14:06:19.066298877Z","tags":[]},"/kubenetes/Categories-of-Hypervisor":{"title":"Categories of Hypervisor","content":"There are two broad categories of hypervisors: Type 1 and Type 2.\n\n### Type 1 hypervisor - Bare Metal Hypervisor\n  \n- A Type 1 hypervisor runs directly on the underlying computer’s physical hardware, interacting directly with its CPU, memory, and physical storage. \n- For this reason, Type 1 hypervisors are also referred to as bare-metal hypervisors. \n- A Type 1 hypervisor takes the place of the host operating system.\n\n##### Advantages of Bare Metal Hypervisors\n- Type 1 hypervisors are highly efficient because they have direct access to physical hardware. \n- This also increases their security, because there is nothing in between them and the CPU that an attacker could compromise. \n- But a Type 1 hypervisor often requires a separate management machine to administer different VMs and control the host hardware.\n\n\n### Type 2 hypervisor - Hosted Hypervisor\n- A Type 2 hypervisor doesn’t run directly on the underlying hardware. \n- Instead, it runs as an application in an OS. \n- Type 2 hypervisors rarely show up in server-based environments. Instead, they’re suitable for individual PC users needing to run multiple operating systems. \n\t- Examples include engineers, security professionals analyzing malware, and business users that need access to applications only available on other software platforms.\n\n##### Advantages of Hosted Hypervisor\n- Type 2 hypervisors often feature additional toolkits for users to install into the guest OS. \n\t- These tools provide enhanced connections between the guest and the host OS, \n\t e.g. they often enable the user to cut and paste between the two or\n\t access host OS files and folders from within the guest VM.\n\n- A Type 2 hypervisor enables quick and easy access to an alternative guest OS (VMs OS) alongside the primary one running on the host system. This makes it great for end-user productivity. \n  A consumer might use it to access their favorite Linux-based development tools while using a speech dictation system only found on Windows, for example.\n\n\n##### Disadvantage of Hosted Hypervisor\n- But because a \u003cu\u003eType 2 hypervisor must access computing, memory, and network resources via the host OS\u003c/u\u003e, **it introduces latency issues that can affect performance.** \n- It also introduces potential security risks if an attacker compromises the host OS because they could then manipulate any guest OS running in the Type 2 hypervisor.\n\n\n\n![[Pasted image 20230507134752.png]]","lastmodified":"2023-05-07T14:06:19.066298877Z","tags":[]},"/kubenetes/Containers-Container-Images":{"title":"Containers \u0026 Container Images","content":"\nA container and a container image are related concepts in the world of [[containerization]], but they are not the same thing.\n\n- [[what is a container image?]]\n- [[what is a container?]]\n\n\nIn summary, \n- a container is an instance of a container image that runs an application, \n- while a container image is a package that contains everything needed to run an application. \nand \n- A container image is used to create containers, which are the actual runtime instances that execute the application.\n\n\n[[what are containers based on?]]\n\n\n\n","lastmodified":"2023-05-07T14:06:19.066298877Z","tags":[]},"/kubenetes/Deployments":{"title":"Deployments","content":"","lastmodified":"2023-05-07T14:06:19.066298877Z","tags":[]},"/kubenetes/Kode-Kloud-Labs-Slack-Community":{"title":"Kode Kloud Labs \u0026 Slack Community","content":"Accessing the Labs\n\nAll hands-on labs are hosted on KodeKloud. Use this link to register for the labs associated with this course. Please make sure to use the same name as your profile in Udemy. That's how we know you are our Udemy student.\n\n  \n\nNote: You don't have to make any additional payment. For now simply enrol in the lab course. We'll tell you when you start practicing once we start learning concepts.\n\n  \n\n**Link:** [https://uklabs.kodekloud.com/courses/labs-kubernetes-for-the-absolute-beginners-hands-on/](https://kodekloud.com/courses/labs-kubernetes-for-the-absolute-beginners-hands-on/)\n\nApply the coupon code **kk-labs-k8b-lakjg328321095305**\n\n\n**username**: prashant.meena@protonmail.com\n**password**: check vault\n\n\n![[Kode Kloud $0 Billing Details - With Coupon Code.png]]\n\n\n\n---\n# Slack Community\nJoin our Slack community by clicking [here](https://kodekloud.com/pages/community).","lastmodified":"2023-05-07T14:06:19.070298907Z","tags":[]},"/kubenetes/Kubernetes":{"title":"Kubernetes","content":"[[Kode Kloud Labs \u0026 Slack Community]]\n[[Kubernetes For Beginners - Kode Kloud.pdf]]\n\n\n[Never install locally](https://www.youtube.com/watch?v=J0NuOlA2xDc\u0026ab_channel=Coderized)\n\n\n[[Virtualization]]\n[[Containers \u0026 Container Images]]\n\n\nKubernetes = [[Containers \u0026 Container Images|Containers]] + orchestration\n\n\nMajor topics starting points\n\n- [[Pod]]\n- [[Deployments]]\n\n\nthen each topics","lastmodified":"2023-05-07T14:06:19.094299087Z","tags":[]},"/kubenetes/Pod":{"title":"Pod","content":"so here I can explaing what the concept is\nand then make out small small question on them\nwhich then can actually become cards linking to one or more differnt questions or topics","lastmodified":"2023-05-07T14:06:19.094299087Z","tags":[]},"/kubenetes/Virtualization":{"title":"Virtualization","content":"[Virtualization Explained - IBM Technology](https://www.youtube.com/watch?v=FZR0rG3HKIk)\n[Virtualization Concept - IBM Technology](https://www.ibm.com/topics/virtualization)\n\nVirtualization (v12n), is a technology that enables the creation of virtual versions of computer hardware, operating systems, storage devices, and networks. It is the foundation of [[cloud computing]].\n\nVirtualization began as a method of **logically dividing the system resources** provided by mainframe computers between different applications. This provides a way to efficiently utilize hardware resources and enables applications to run in a more flexible and scalable manner.\nWhereas traditionally, these applications would bound to hardware\n\n\nVirtualization is a concept that is used by [[What are virtual machines (VMs) |Virtual Machines]] and [[what is a container?|container]], hence virtualization allows us to run multiple virtual machines (VMs) or containers on a single physical host machine, **each with its own isolated environment**. \n\n\n[[Virtualizations Practical Example]]\n\n[[Beneifts of virtualization]]\n\n[[Types of Virtualization]]\n\n\n\nThere are different types of virtualization, including:\n\n1.  Full virtualization: In full virtualization, a hypervisor is used to create multiple virtual machines on a single physical host machine. Each virtual machine runs its own operating system and applications, and they are completely isolated from each other and the host system.\n    \n2.  Para-virtualization: In para-virtualization, the hypervisor provides a virtualized hardware interface to each virtual machine, allowing them to share physical hardware resources. This enables better performance than full virtualization, but it requires the guest operating system to be modified.\n    \n3.  Operating system-level virtualization: In operating system-level virtualization, a single operating system kernel is used to run multiple isolated user-space instances, each with its own file system, network stack, and process space. This is the type of virtualization used by containers.\n    \n4.  Application virtualization: In application virtualization, applications are encapsulated into virtual containers that include all the necessary dependencies, libraries, and configuration files needed to run the application. This enables applications to run on different operating systems without requiring modification.\n    \n\nNow, regarding the relationship between virtualization and containerization, containerization is a type of operating system-level virtualization that allows multiple isolated user-space instances to run on a single operating system kernel. Containers share the same host operating system, but each container has its own file system, network stack, and process space. In contrast, traditional virtualization involves running multiple virtual machines on a single host, each with its own operating system and kernel.\n\nContainerization provides several advantages over traditional virtualization, such as lower overhead, faster startup times, and higher density. Containerization also enables the efficient deployment and scaling of applications, making it a popular choice for modern application development and deployment.","lastmodified":"2023-05-07T14:06:19.094299087Z","tags":[]},"/kubenetes/Virtualizations-Practical-Example":{"title":"Virtualizations Practical Example","content":"[[Virtualization]] is technology that lets you create useful IT services using resources that are traditionally bound to hardware. It allows you to use a physical machine’s full capacity by distributing its capabilities among many users or environments.\n\n\nImagine you have 3 physical servers with individual dedicated purposes. One is a mail server, another is a web server, and the last one runs internal legacy applications. Each server is being used at about 30% capacity—just a fraction of their running potential. \n\n![[server usage - without virutalization.png]]\nTraditionally It was often easier and more reliable to run individual tasks on individual servers: 1 server, 1 operating system, 1 task. \n\nIt wasn’t easy to give 1 server multiple brains. But with virtualization, you can split the mail server into 2 unique ones that can handle independent tasks so the legacy apps can be migrated. It’s the same hardware, you’re just using more of it more efficiently.\n\n![[server usage - with virtualization.png]]\n\nKeeping security in mind, you could split the first server again so it could handle another task—increasing its use from 30%, to 60%, to 90%. \n\nsOnce you do that, the now empty servers could be reused for other tasks or retired altogether to reduce cooling and maintenance costs.","lastmodified":"2023-05-07T14:06:19.094299087Z","tags":[]},"/kubenetes/What-are-virtual-machines-VMs":{"title":"What are virtual machines (VMs)","content":"A virtual machine is a virtual representation, or emulation, of a physical computer. They are often referred to as a **guest**,while the physical machine they run on is referred to as the **host**.\n\nEach VM runs its own operating system (OS) and behaves like an independent computer, even though it is running on just a portion of the actual underlying computer hardware.\n\n\nA VM cannot interact directly with a physical computer. Instead, it needs a lightweight software layer called a [[What is a Hypervisor?|hypervisor]] to coordinate between it and the underlying physical hardware.\n\n\nThis technology can go by many names, including \n- **virtual server**, \n- **virtual server instance (VSI)** and \n- **virtual private server (VPS)**, \n","lastmodified":"2023-05-07T14:06:19.094299087Z","tags":[]},"/kubenetes/What-is-a-Hypervisor":{"title":"What is a Hypervisor?","content":"Hypervisor is a small software layer that enables multiple instances of [[operating systems]] to run alongside each other, sharing the same physical computing resources. \nThis process is called [[Virtualization]], and the operating system instances are referred to as [[What are virtual machines (VMs)|virtual machines (VMs) ]]— software emulations of physical computers.\n\n\nHypervisor is also known as **virtual machine monitor** (VMM) manages these VMs as they run alongside each other. The hypervisor allocates physical computing resources—such as processors, memory, and storage—to each VM. It keeps each VM separate from others, so they don’t interfere with each other. so if, for example, one OS suffers a crash or a security compromise, the others survive\n\n[[Categories of Hypervisor]]\n\nexplaing it\nits type?\nits working?? mybe","lastmodified":"2023-05-07T14:06:19.094299087Z","tags":[]},"/kubenetes/container":{"title":"container","content":"","lastmodified":"2023-05-07T14:06:19.094299087Z","tags":[]},"/kubenetes/what-are-containers-based-on":{"title":"what are containers based on?","content":"Containers are based on the concept of [[operating system-level virtualization]], where multiple isolated user-space instances can run on a single operating system kernel. Containers share the same kernel as the host operating system, but each container has its own file sysstem, network stack, and process space.\n\nContainers can be managed using container orchestration tools like Kubernetes, which automate the deployment, scaling, and management of containers across multiple hosts. Containers are popular in modern software development and deployment because they offer a fast, reliable, and scalable way to package and distribute software applications.\n\n\nA container is a standard unit of software that packages up code and all its dependencies so the application runs quickly and reliably from one computing environment to another.","lastmodified":"2023-05-07T14:06:19.098299117Z","tags":[]},"/kubenetes/what-is-a-container":{"title":"what is a container?","content":"\nIn the context of computing,\n- A container is a lightweight, isolated, and **executable runtime instance** that runs an application and all its dependencies in an isolated environment. \n- Containers are created from container images and are typically used to run and deploy applications in a consistent and portable manner.\n- Containers provide an isolated and consistent environment for applications to run, regardless of the host system they are running on.\n\n\n**Container images become containers at runtime**\n\n\nHence we can say in short\n- A container is a \u003cu\u003estandard unit of software\u003c/u\u003e that packages up the application code and all its dependencies, so the application can run quickly and reliably from one computing environment to another.\n\n\n![[whats included in a container.png]]\n\n\n\n\n![[containerized applications architecture.png]]","lastmodified":"2023-05-07T14:06:19.098299117Z","tags":[]},"/kubenetes/what-is-a-container-image":{"title":"what is a container image?","content":"\nIn the context of computing,\n- A container image is a lightweight, standalone, executable package that contains everything needed to run a piece of software, including application code, runtime environment, system tools, libraries, and settings. \n\n\nContainer Image: A container image is a lightweight, standalone, and executable package that contains all the necessary dependencies, libraries, and configuration files needed to run an application. \n\nA container image is built from a Dockerfile or another container image and can be used to create containers. Container images are typically stored in a container registry and can be shared and distributed to other systems.","lastmodified":"2023-05-07T14:06:19.098299117Z","tags":[]},"/obsidian":{"title":"Obsidian Vault Integration","content":"\n## Setup\nObsidian is the preferred way to use Quartz. You can either create a new Obsidian Vault or link one that your already have.\n\n### New Vault\nIf you don't have an existing Vault, [download Obsidian](https://obsidian.md/) and create a new Vault in the `/content` folder that you created and cloned during the [setup](notes/setup.md) step.\n\n### Linking an existing Vault\nThe easiest way to use an existing Vault is to copy all of your files (directory and hierarchies intact) into the `/content` folder.\n\n## Settings\nGreat, now that you have your Obsidian linked to your Quartz, let's fix some settings so that they play well.\n\nOpen Settings \u003e Files \u0026 Links and look for these two items:\n\n1. Set the **New link format** to **Absolute Path in vault**. If you have a completely flat vault (no folders), this step isn't necessary.\n2. Turn **on** the **Automatically update internal links** setting.\n\n\n![[notes/images/obsidian-settings.png]]*Obsidian Settings*\n\n## Templates\nInserting front matter everytime you want to create a new Note gets annoying really quickly. Luckily, Obsidian supports templates which makes inserting new content really easily.\n\n\u003e [!WARNING]\n\u003e \n\u003e **If you decide to overwrite the `/content` folder completely, don't remove the `/content/templates` folder!**\n\nHead over to Options \u003e Core Plugins and enable the Templates plugin. Then go to Options \u003e Hotkeys and set a hotkey for 'Insert Template' (I recommend `[cmd]+T`). That way, when you create a new note, you can just press the hotkey for a new template and be ready to go!\n\n\u003e 👀 Step 4: [Preview Quartz Changes](notes/preview%20changes.md)\n","lastmodified":"2023-05-07T14:06:19.098299117Z","tags":["setup"]},"/philosophy":{"title":"Quartz Philosophy","content":"\n\u003e “[One] who works with the door open gets all kinds of interruptions, but [they] also occasionally gets clues as to what the world is and what might be important.” — Richard Hamming\n\n## Why Quartz?\nHosting a public digital garden isn't easy. There are an overwhelming number of tutorials, resources, and guides for tools like [Notion](https://www.notion.so/), [Roam](https://roamresearch.com/), and [Obsidian](https://obsidian.md/), yet none of them have super easy to use *free* tools to publish that garden to the world.\n\nI've personally found that\n1. It's nice to access notes from anywhere\n2. Having a public digital garden invites open conversations\n3. It makes keeping personal notes and knowledge *playful and fun*\n\nI was really inspired by [Bianca](https://garden.bianca.digital/) and [Joel](https://joelhooks.com/digital-garden)'s digital gardens and wanted to try making my own.\n\n**The goal of Quartz is to make hosting your own public digital garden free and simple.** You don't even need your own website. Quartz does all of that for you and gives your own little corner of the internet.\n","lastmodified":"2023-05-07T14:06:19.098299117Z","tags":[]},"/preview-changes":{"title":"Preview Changes","content":"\nIf you'd like to preview what your Quartz site looks like before deploying it to the internet, the following\ninstructions guide you through installing the proper dependencies to run it locally.\n\n\n## Install `hugo-obsidian`\nThis step will generate the list of backlinks for Hugo to parse. Ensure you have [Go](https://golang.org/doc/install) (\u003e= 1.16) installed.\n\n```bash\n# Install and link `hugo-obsidian` locally\ngo install github.com/jackyzha0/hugo-obsidian@latest\n```\n\nIf you are running into an error saying that `command not found: hugo-obsidian`, make sure you set your `GOPATH` correctly (see [[notes/troubleshooting#`command not found: hugo-obsidian`|the troubleshooting page]])! This will allow your terminal to correctly recognize hugo-obsidian as an executable.\n\n##  Installing Hugo\nHugo is the static site generator that powers Quartz. [Install Hugo with \"extended\" Sass/SCSS version](https://gohugo.io/getting-started/installing/) first. Then,\n\n```bash\n# Navigate to your local Quartz folder\ncd \u003clocation-of-your-local-quartz\u003e\n\n# Start local server\nmake serve\n\n# View your site in a browser at http://localhost:1313/\n```\n\n\u003e [!INFO] Docker Support\n\u003e\n\u003e If you have the Docker CLI installed already, you can avoid installing `hugo-obsidian` and `hugo`. Instead, open your terminal, navigate to your folder with Quartz and run `make docker`\n\nAfterwards, start the Hugo server as shown above and your local backlinks and interactive graph should be populated! Now, let's get it hosted online.\n\n\u003e 🌍 Step 5: [Hosting Quartz online!](notes/hosting.md)\n","lastmodified":"2023-05-07T14:06:19.098299117Z","tags":["setup"]},"/search":{"title":"Search","content":"\nQuartz supports two modes of searching through content.\n\n## Full-text\nFull-text search is the default in Quartz. It produces results that *exactly* match the search query. This is easier to setup but usually produces lower quality matches.\n\n```yaml {title=\"data/config.yaml\"}\n# the default option\nenableSemanticSearch: false\n```\n\n## Natural Language\nNatural language search is powered by [Operand](https://beta.operand.ai/). It understands language like a person does and finds results that best match user intent. In this sense, it is closer to how Google Search works.\n\nNatural language search tends to produce higher quality results than full-text search.\n\nHere's how to set it up.\n\n1. Login or Register for a new Operand account. Click the verification link sent to your email, and you'll be redirected to the dashboard. (Note) You do not need to enter a credit card to create an account, or get started with the Operand API. The first $10 of usage each month is free. To learn more, see pricing. If you go over your free quota, we'll (politely) reach out and ask you to configure billing.\n2. Create your first index. On the dashboard, under \"Indexes\", enter the name and description of your index, and click \"Create Index\". Note down the ID of the index (obtained by clicking on the index name in the list of indexes), as you'll need it in the next step. IDs are unique to each index, and look something like `uqv1duxxbdxu`.\n3. Click into the index you've created. Under \"Index Something\", select \"SITEMAP\" from the dropdown and click \"Add Source\".\n4. For the \"Sitemap.xml URL\", put your deployed site's base URL followed by `sitemap.xml`. For example, for `quartz.jzhao.xyz`, put `https://quartz.jzhao.xyz/sitemap.xml`. Leave the URL Regex empty. \n5. Get your API key. On the dashboard, under \"API Keys\", you can manage your API keys. If you don't already have an API key, click \"Create API Key\". You'll need this for the next step.\n6. Open `data/config.yaml`. Set `enableSemanticSearch` to `true`, `operandApiKey` to your copied key, and `operandIndexId` to the ID of the index we created from earlier..\n\n```yaml {title=\"data/config.yaml\"}\n# the default option\nsearch:\n  enableSemanticSearch: true\n  operandApiKey: \"jp9k5hudse2a828z98kxd6z3payi8u90rnjf\"\n  operandIndexId: \"s0kf3bd6tldw\"\n```\n7. Push your changes to the site and wait for it to deploy.\n8. Check the Operand dashboard and wait for your site to index. Enjoy natural language search powered by Operand!\n","lastmodified":"2023-05-07T14:06:19.098299117Z","tags":[]},"/setup":{"title":"Setup","content":"\n## Making your own Quartz\nSetting up Quartz requires a basic understanding of `git`. If you are unfamiliar, [this resource](https://resources.nwplus.io/2-beginner/how-to-git-github.html) is a great place to start!\n\n### Forking\n\u003e A fork is a copy of a repository. Forking a repository allows you to freely experiment with changes without affecting the original project.\n\nNavigate to the GitHub repository for the Quartz project:\n\n📁 [Quartz Repository](https://github.com/jackyzha0/quartz)\n\nThen, Fork the repository into your own GitHub account. **Make sure that when you fork, you _uncheck_ the 'Copy the `hugo` branch only' option**.\n\nIf you don't have an account, you can make on for free [here](https://github.com/join). More details about forking a repo can be found on [GitHub's documentation](https://docs.github.com/en/get-started/quickstart/fork-a-repo).\n\n![[notes/images/fork.png]]\n\n### Cloning\nAfter you've made a fork of the repository, you need to download the files locally onto your machine. Ensure you have `git`, then type the following command in your terminal replacing `YOUR-USERNAME` with your GitHub username.\n\n```shell\ngit clone https://github.com/YOUR-USERNAME/quartz\n```\n\n## Editing\nGreat! Now you have everything you need to start editing and growing your digital garden. If you're ready to start writing content already, check out the recommended flow for editing notes in Quartz.\n\n\u003e ✏️ Step 2: [Editing Notes in Quartz](notes/editing.md)\n\nHaving problems? Checkout our [FAQ and Troubleshooting guide](notes/troubleshooting.md).\n","lastmodified":"2023-05-07T14:06:19.098299117Z","tags":["setup"]},"/showcase":{"title":"Showcase","content":"\nWant to see what Quartz can do? Here are some cool community gardens :)\n\n- [Quartz Documentation (this site!)](https://quartz.jzhao.xyz/)\n- [Jacky Zhao's Garden](https://jzhao.xyz/)\n- [Scaling Synthesis - A hypertext research notebook](https://scalingsynthesis.com/)\n- [AWAGMI Intern Notes](https://notes.awagmi.xyz/)\n- [Shihyu's PKM](https://shihyuho.github.io/pkm/)\n- [SlRvb's Site](https://slrvb.github.io/Site/)\n- [Course notes for Information Technology Advanced Theory](https://a2itnotes.github.io/quartz/)\n- [Brandon Boswell's Garden](https://brandonkboswell.com)\n- [Siyang's Courtyard](https://siyangsun.github.io/courtyard/)\n- [Data Dictionary 🧠](https://glossary.airbyte.com/)\n- [sspaeti.com's Second Brain](https://brain.sspaeti.com/)\n- [oldwinterの数字花园](https://garden.oldwinter.top/)\n- [SethMB Work](https://sethmb.xyz/)\n- [Abhijeet's Math Wiki](https://abhmul.github.io/quartz/Math-Wiki/)\n- [Mike's AI Garden 🤖🪴](https://mwalton.me/)\n\nIf you want to see your own on here, submit a [Pull Request adding yourself to this file](https://github.com/jackyzha0/quartz/blob/hugo/content/notes/showcase.md)!\n","lastmodified":"2023-05-07T14:06:19.098299117Z","tags":[]},"/troubleshooting":{"title":"Troubleshooting and FAQ","content":"\nStill having trouble? Here are a list of common questions and problems people encounter when installing Quartz.\n\nWhile you're here, join our [Discord](https://discord.gg/cRFFHYye7t) :)\n\n### Does Quartz have Latex support?\nYes! See [CJK + Latex Support (测试)](notes/CJK%20+%20Latex%20Support%20(测试).md) for a brief demo.\n\n### Can I use \\\u003cObsidian Plugin\\\u003e in Quartz?\nUnless it produces direct Markdown output in the file, no. There currently is no way to bundle plugin code with Quartz.\n\nThe easiest way would be to add your own HTML partial that supports the functionality you are looking for.\n\n### My GitHub pages is just showing the README and not Quartz\nMake sure you set the source to deploy from `master` (and not `hugo`) using `/ (root)`! See more in the [hosting](/notes/hosting) guide\n\n### Some of my pages have 'January 1, 0001' as the last modified date\nThis is a problem caused by `git` treating files as case-insensitive by default and some of your posts probably have capitalized file names. You can turn this off in your Quartz by running this command.\n\n```shell\n# in the root of your Quartz (same folder as config.toml)\ngit config core.ignorecase true\n\n# or globally (not recommended)\ngit config --global core.ignorecase true\n```\n\n### Can I publish only a subset of my pages?\nYes! Quartz makes selective publishing really easy. Heres a guide on [excluding pages from being published](notes/ignore%20notes.md).\n\n### Can I host this myself and not on GitHub Pages?\nYes! All built files can be found under `/public` in the `master` branch. More details under [hosting](notes/hosting.md).\n\n### `command not found: hugo-obsidian`\nMake sure you set your `GOPATH` correctly! This will allow your terminal to correctly recognize `hugo-obsidian` as an executable.\n\n```shell\n# Add the following 2 lines to your ~/.bash_profile (~/.zshrc if you are on Mac)\nexport GOPATH=/Users/$USER/go\nexport PATH=$GOPATH/bin:$PATH\n\n# In your current terminal, to reload the session\nsource ~/.bash_profile # again, (~/.zshrc if you are on Mac)\n```\n\n### How come my notes aren't being rendered?\nYou probably forgot to include front matter in your Markdown files. You can either setup [Obsidian](notes/obsidian.md) to do this for you or you need to manually define it. More details in [the 'how to edit' guide](notes/editing.md).\n\n### My custom domain isn't working!\nWalk through the steps in [the hosting guide](notes/hosting.md) again. Make sure you wait 30 min to 1 hour for changes to take effect.\n\n### How do I setup analytics?\nQuartz by default uses [Plausible](https://plausible.io/) for analytics. \n\nIf you would prefer to use Google Analytics, you can follow this [guide in the Hugo documentation](https://gohugo.io/templates/internal/#google-analytics). \n\nAlternatively, you can also import your Google Analytics data into Plausible by [following this guide](https://plausible.io/docs/google-analytics-import).\n\n\n### How do I change the content on the home page?\nTo edit the main home page, open `/content/_index.md`.\n\n### How do I change the colours?\nYou can change the theme by editing `assets/custom.scss`. More details on customization and themeing can be found in the [customization guide](notes/config.md).\n\n### How do I add images?\nYou can put images anywhere in the `/content` folder.\n\n```markdown\nExample image (source is in content/notes/images/example.png)\n![Example Image](/content/notes/images/example.png)\n```\n\n### My Interactive Graph and Backlinks aren't up to date\nBy default, the `linkIndex.json` (which Quartz needs to generate the Interactive Graph and Backlinks) are not regenerated locally. To set that up, see the guide on [local editing](notes/editing.md)\n\n### Can I use React/Vue/some other framework?\nNot out of the box. You could probably make it work by editing `/layouts/_default/single.html` but that's not what Quartz is designed to work with. 99% of things you are trying to do with those frameworks you can accomplish perfectly fine using just vanilla HTML/CSS/JS.\n\n## Still Stuck?\nQuartz isn't perfect! If you're still having troubles, file an issue in the GitHub repo with as much information as you can reasonably provide. Alternatively, you can message me on [Twitter](https://twitter.com/_jzhao) and I'll try to get back to you as soon as I can.\n\n🐛 [Submit an Issue](https://github.com/jackyzha0/quartz/issues)\n","lastmodified":"2023-05-07T14:06:19.098299117Z","tags":[]},"/updating":{"title":"Updating","content":"\nHaven't updated Quartz in a while and want all the cool new optimizations? On Unix/Mac systems you can run the following command for a one-line update! This command will show you a log summary of all commits since you last updated, press `q` to acknowledge this. Then, it will show you each change in turn and press `y` to accept the patch or `n` to reject it. Usually you should press `y` for most of these unless it conflicts with existing changes you've made! \n\n```shell\nmake update\n```\n\nOr, if you don't want the interactive parts and just want to force update your local garden (this assumed that you are okay with some of your personalizations been overriden!)\n\n```shell\nmake update-force\n```\n\nOr, manually checkout the changes yourself.\n\n\u003e [!warning] Warning!\n\u003e\n\u003e If you customized the files in `data/`, or anything inside `layouts/`, your customization may be overwritten!\n\u003e Make sure you have a copy of these changes if you don't want to lose them.\n\n\n```shell\n# add Quartz as a remote host\ngit remote add upstream git@github.com:jackyzha0/quartz.git\n\n# index and fetch changes\ngit fetch upstream\ngit checkout -p upstream/hugo -- layouts .github Makefile assets/js assets/styles/base.scss assets/styles/darkmode.scss config.toml data \n```\n","lastmodified":"2023-05-07T14:06:19.098299117Z","tags":[]}}