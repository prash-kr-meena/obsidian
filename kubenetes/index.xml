<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Kubenetes on</title><link>https://prash-kr-meena.github.io/quartz/kubenetes/</link><description>Recent content in Kubenetes on</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="https://prash-kr-meena.github.io/quartz/kubenetes/index.xml" rel="self" type="application/rss+xml"/><item><title/><link>https://prash-kr-meena.github.io/quartz/kubenetes/Beneifts-of-virtualization/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://prash-kr-meena.github.io/quartz/kubenetes/Beneifts-of-virtualization/</guid><description>Slash your IT expenses Virtualization can reduce IT expenses by consolidating applications onto fewer physical servers. Utilizing a non-virtualized environment can be inefficient because when you are not consuming the application on the server, the compute is sitting idle and can&amp;rsquo;t be used for other applications.</description></item><item><title/><link>https://prash-kr-meena.github.io/quartz/kubenetes/Categories-of-Hypervisor/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://prash-kr-meena.github.io/quartz/kubenetes/Categories-of-Hypervisor/</guid><description>There are two broad categories of hypervisors: Type 1 and Type 2.
Type 1 hypervisor - Bare Metal Hypervisor A Type 1 hypervisor runs directly on the underlying computer’s physical hardware, interacting directly with its CPU, memory, and physical storage.</description></item><item><title/><link>https://prash-kr-meena.github.io/quartz/kubenetes/CNCF-Cloud-Native-Computing-Foundation/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://prash-kr-meena.github.io/quartz/kubenetes/CNCF-Cloud-Native-Computing-Foundation/</guid><description>The Cloud Native Computing Foundation (CNCF) is a Linux Foundation project that was founded in 2015 to help advance container technology and align the tech industry around its evolution.</description></item><item><title/><link>https://prash-kr-meena.github.io/quartz/kubenetes/container/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://prash-kr-meena.github.io/quartz/kubenetes/container/</guid><description/></item><item><title/><link>https://prash-kr-meena.github.io/quartz/kubenetes/Containers-Container-Images/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://prash-kr-meena.github.io/quartz/kubenetes/Containers-Container-Images/</guid><description>A container and a container image are related concepts in the world of [[containerization]], but they are not the same thing.</description></item><item><title/><link>https://prash-kr-meena.github.io/quartz/kubenetes/Deployments/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://prash-kr-meena.github.io/quartz/kubenetes/Deployments/</guid><description/></item><item><title/><link>https://prash-kr-meena.github.io/quartz/kubenetes/Kode-Kloud-Labs-Slack-Community/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://prash-kr-meena.github.io/quartz/kubenetes/Kode-Kloud-Labs-Slack-Community/</guid><description>Accessing the Labs
All hands-on labs are hosted on KodeKloud. Use this link to register for the labs associated with this course.</description></item><item><title/><link>https://prash-kr-meena.github.io/quartz/kubenetes/Kubernetes/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://prash-kr-meena.github.io/quartz/kubenetes/Kubernetes/</guid><description>[[Kode Kloud Labs &amp;amp; Slack Community]] [[Kubernetes For Beginners - Kode Kloud.pdf]]
Never install locally
[[Virtualization]] [[Containers &amp;amp; Container Images]]</description></item><item><title/><link>https://prash-kr-meena.github.io/quartz/kubenetes/Pod/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://prash-kr-meena.github.io/quartz/kubenetes/Pod/</guid><description>so here I can explaing what the concept is and then make out small small question on them which then can actually become cards linking to one or more differnt questions or topics</description></item><item><title/><link>https://prash-kr-meena.github.io/quartz/kubenetes/Virtualization/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://prash-kr-meena.github.io/quartz/kubenetes/Virtualization/</guid><description>Virtualization Explained - IBM Technology Virtualization Concept - IBM Technology
Virtualization (v12n), is a technology that enables the creation of virtual versions of computer hardware, operating systems, storage devices, and networks.</description></item><item><title/><link>https://prash-kr-meena.github.io/quartz/kubenetes/Virtualizations-Practical-Example/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://prash-kr-meena.github.io/quartz/kubenetes/Virtualizations-Practical-Example/</guid><description>[[Virtualization]] is technology that lets you create useful IT services using resources that are traditionally bound to hardware. It allows you to use a physical machine’s full capacity by distributing its capabilities among many users or environments.</description></item><item><title/><link>https://prash-kr-meena.github.io/quartz/kubenetes/what-are-containers-based-on/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://prash-kr-meena.github.io/quartz/kubenetes/what-are-containers-based-on/</guid><description>Containers are based on the concept of [[operating system-level virtualization]], where multiple isolated user-space instances can run on a single operating system kernel.</description></item><item><title/><link>https://prash-kr-meena.github.io/quartz/kubenetes/What-are-virtual-machines-VMs/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://prash-kr-meena.github.io/quartz/kubenetes/What-are-virtual-machines-VMs/</guid><description>A virtual machine is a virtual representation, or emulation, of a physical computer. They are often referred to as a guest,while the physical machine they run on is referred to as the host.</description></item><item><title/><link>https://prash-kr-meena.github.io/quartz/kubenetes/what-is-a-container-image/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://prash-kr-meena.github.io/quartz/kubenetes/what-is-a-container-image/</guid><description>In the context of computing,
A container image is a lightweight, standalone, executable package that contains everything needed to run a piece of software, including application code, runtime environment, system tools, libraries, and settings.</description></item><item><title/><link>https://prash-kr-meena.github.io/quartz/kubenetes/what-is-a-container/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://prash-kr-meena.github.io/quartz/kubenetes/what-is-a-container/</guid><description>In the context of computing,
A container is a lightweight, isolated, and executable runtime instance that runs an application and all its dependencies in an isolated environment.</description></item><item><title/><link>https://prash-kr-meena.github.io/quartz/kubenetes/What-is-a-Hypervisor/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://prash-kr-meena.github.io/quartz/kubenetes/What-is-a-Hypervisor/</guid><description>Hypervisor is a small software layer that enables multiple instances of [[operating systems]] to run alongside each other, sharing the same physical computing resources.</description></item></channel></rss>